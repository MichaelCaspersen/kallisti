#nop --
#nop Class Definitions
#nop --

#var walker-description {Bot for running Tellurian}
#var walker-help {
Commands:\n
\ttellu <command> - start stop clearzone status\n

Functions:\n
\t....\n
}

#nop --
#nop Modloader Stuff
#nop --

#alias walker-register {
	#if {@isloaded{modloader}} {

		register_module walker
	} {
		#class walker kill
	}
}

#alias walker-unregister {
    #unevent {MAP ENTER ROOM};
}


#NOP #######################################################
#NOP Initialize Values
#NOP #######################################################

#var tellu_mode normal;

#var cur_room_vnum 34595;
#var hub 34595;
#var autowalk 1;
#var autowalk_delay 0.8;
#var autowalk_allowed_downtime 30;
#var zonechange_delay 4;
#var death_delay 4;
#var entangle_delay 3;
#var killtarget 0;
#var marktarget 1;
#var tellu_mode_running 1;
#var time_since_last_move 0;

#var tellu_debug 1;


#NOP #######################################################
#NOP Control function
#NOP #######################################################
#tab tellu;
#alias {^tellu %1} {
    #SWITCH {"%1"} {
        #CASE {"start"} {
            #show <143>Tellu START;
            #var tellu_mode normal;
            #var tellu_mode_running 1;
            #var autowalk 1;
            #var zonechange_delay 8;
            tellu_bot_info;
            #if {$cur_room_vnum!=$hub} {
                #show <143>We must start from HUB;
                #map run $hub;
            };#else {
                load_next_zone
            }
        };
        #CASE {"stop"} {
            #show <143>Tellu STOP;
            #var tellu_mode normal;
            #var tellu_mode_running 0;
            #var killtarget 0;
            #var marktarget 0;
            tellu_bot_info;
            #if {$cur_room_vnum==$hub} 
                {#nop do nothing}      
                {#var destination 0;find_next_move;}
        };
        #CASE {"clearzone"} {
            #show <143>Tellu CLEARZONE;
            #var tellu[contains_mage] {west,north,east};
            #list tellu[contains_mage] explode {,};
            #var tellu_mode_running 1;
            #var autowalk 1;
            #var zonechange_delay 2;
            #var tellu_mode clear;
            tellu_bot_info;
            #if {$cur_room_vnum!=$hub} {
                #show <143>We must start from HUB;
                #map run $hub;
            };#else {
                load_next_zone
            }
        };
        #CASE {"stats"} {
            #show <134> Revive: $tellu_stats[revive]  Fury: $tellu_stats[fury]  Prudent: $tellu_stats[prudent];
            #show <134> Scarab-kin: $tellu_stats[scarab-kin]  Topiary/tree: $tellu_stats[topiary]  Tundra-snap/Wolf: $tellu_stats[tundra-snap];
            #show <134> Last move: $time_since_last_move(s);
        };
        #DEFAULT {#show <134>Tellu command not recognized. start stop clearzone stats};
    };
}





#NOP #######################################################
#NOP The Brain - triggers on enter room event
#NOP #######################################################
#var lastzonetime 0;
#var last_move_time 0;

#event {MAP ENTER ROOM} {
    room_clear;
    #delay $autowalk_delay {
        #if {"$MSDP_ROOM_VNUM"=="?"} {
            #map get roomvnum cur_room_vnum;
            tellu_debug {<143>MAP ENTER EVENT: GOT FROM MAP $cur_room_vnum}
        }; #else {
            #var cur_room_vnum $MSDP_ROOM_VNUM;
            tellu_debug {<143>MAP ENTER EVENT: GET FROM MSDP $cur_room_vnum};
        };
        #show <174>DELAYED MAP ENTER ROOM: $cur_room_vnum  P:$botPositive N:$botNegative M:$tellu_mobs_in_room Last: $time_since_last_move;
        evaluate_room
    }
}

#alias room_clear {
    #var tellu_mobs_in_room 0;
    #var botPositive 0;
    #var botNegative 0;
    #var tellu_target {};
}


#alias tellu_mob_dead {
    #delay $death_delay {
        tellu_debug {<131>MOB DEAD - FIND NEXT MOVE - CanMove: @can_group_move{}};
        #if { ("$tellu_target"=="mage") && ("$tellu_mode"=="clear") } {
            #list tellu[contains_mage] {find} {$tellu_zone} {mage_zone_id};
            #list tellu[contains_mage] delete $mage_zone_id;
            tellu_debug {Removing $tellu_zone from clearing};
        };
        #if {@can_group_move{}} {
            tellu_debug {<131>Group can move - Find next move};
            find_next_move;
        };#else {
            tellu_debug {<131>Group cant move};
            #if {"$char_entangled"!=""} {
                #format char_entangled %l $char_entangled;
                gt &08all chop $char_entangled&--
            };
            #var char_entangled {};
            #delay $entangle_delay {find_next_move};
        }
    }
}

#alias evaluate_room {
    tellu_debug {<131>EVALUATE ROOM CALLED};
    #if {$cur_room_vnum==$hub} {
        tellu_debug {<131>WE ARE AT HUB};
        #if {$tellu_mode_running} {
            load_next_zone;
        };#else {
            #nop var autowalk 0;
            #show <131>Tellurian Bot Stopped - <tellu start> to run again;
            #var destination {};
        }
    };
    #else {
        #if {$botPositive!=1} {
            tellu_debug {<131>NO POSITIVE TARGETS};
            find_next_move;
        };
        #else {
            #if { ($botNegative>0) || ($tellu_mobs_in_room>1) } {
                tellu_debug {<131>BAD GUYS OR TOO MANY MOBS};
                find_next_move;
            };
            #else {
                tellu_debug {<131>EVALUATE ROOM - ONLY ONE GOOD TARGET};
                #if {@verifyTelluZone{}} {
                    tellu_debug {<131>ROOM VERIFIED - KILL TARGET};
                    #if {"$tellu_mode"=="normal"} { 
                        #if {$marktarget} {: marks $tellu_target};
                        #if {$killtarget} {kill $tellu_target};
                    };#elseif {"$tellu_mode"=="clear"} { 
                        #if {$marktarget} {: marks $tellu_target};
                        #if {$killtarget} {kill $tellu_target};
                    };
                    #delay 5 {#if {$cur_opponents==0} {tellu_debug {<131>COMBAT DIDNT START - MOVE ON};find_next_move} {tellu_debug {<131>Combat started}}}
                };#else {
                    tellu_debug {<131>ROOM NOT VERIFIED - DONT KILL TARGET};
                }
            }
        };
    }
}    

#alias find_next_move {
    tellu_debug {<147>FIND NEXT MOVE CALLED};
    #if { ($destination==$cur_room_vnum) && ($cur_room_vnum!=$hub) } {
        tellu_debug {<147>At destination: REMOVE CURRENT DESTINATION - LOAD NEXT DESTINATION};
        #if { &waypoints[$tellu_zone][]>0 } { #list waypoints[$tellu_zone] delete 1 };
        load_route;
    }; #elseif {$destination>0} {
        tellu_debug {<147>FIND PATH TOWARDS MOVE: $destination};
        load_route;
    }; #elseif {$destination==0} {
        tellu_debug {<147>RETURN TO HUB};
        #list waypoints[$tellu_zone] clear;
        #list waypoints[$tellu_zone] add $hub;
        load_route;
    }; #else {
        tellu_debug {<147>No destination};
        #nop
    };
}


#alias load_next_zone {
    #math timesincelastzone { $MSDP_UPTIME - $lastzonetime };
    #var lastzonetime $MSDP_UPTIME;
    tellu_debug {<172>LOAD NEXT ZONE CALLED - time since last zone: $timesincelastzone};
    #if {$timesincelastzone>10} {
        #if { ("$tellu_mode"=="normal") || ("$tellu_mode"=="clear") } {
            #math tellu[zindex] {$tellu[zindex]+1};
            #if {$tellu[zindex] <= &tellu[zone][]} { };
            #else { 
                #var tellu[zindex] 1 
            };
        };#elseif {"$tellu_mode"=="clear"} {
            #math tellu[zindex] {$tellu[zindex]+1};
            #if {$tellu[zindex] <= &tellu[contains_mage][]} { };
            #else { 
                #var tellu[zindex] 1 
            };
        };
        #var tellu_zone $tellu[zone][$tellu[zindex]];
        #var waypoints {};
        #var waypoints[north] {34502,34501,34508,34532,34503,34552,34558,34533,34504,34529,34595,34595};
        #var waypoints[west] {34542,34549,34550,34573,34547,34521,34523,34571,34544,34568,34595,34595};
        #var waypoints[east] {34567,34560,34559,34512,34562,34538,34536,34514,34565,34517,34595,34595};
        #list waypoints[$tellu_zone] explode {,};
        #show <172>NEXT TELLU ZONE: [$tellu[zindex]:&tellu[zone][]] $tellu_zone  steps: &waypoints[$tellu_zone][];
        #show <172>TAKING A $zonechange_delay s BREAK TO SORT SUMMON ETC.;
        #if {&need_summons[]>0} {
            nco tellu_summon;
        };
        updategroupname;
        tellu stats;
        #delay $zonechange_delay load_route;
    }
}


#alias load_route {
    tellu_debug {<132>LOAD ROUTE CALLED};
	#list waypoints[$tellu_zone] get 1 destination;
    #map find $destination;
    #path get length path_length;
    tellu_debug {<132>We are in $tellu_zone  Current: $cur_room_vnum  Destination: $destination Path:$path_length};
    #if {$path_length==0} {
        #list waypoints[$tellu_zone] delete 1;
        find_next_move;
    };
    #elseif {$autowalk} {
        #math time_since_last_move { $MSDP_UPTIME - $last_move_time };
        #var last_move_time $MSDP_UPTIME;
        queueAdd move {#path w}
    };
    tellu_bot_info
}

#var showticker 0;
#ticker {restartwalker} {
    #if {"$MSDP_ROOM_VNUM"=="?"} {#map get roomvnum cur_room_vnum};
    #if { ($tellu_mode_running) && ($cur_room_vnum!=$hub) } {
        #math time_since_last_move { $MSDP_UPTIME - $last_move_time };
        #if {@can_group_move{}==0} {
            #if {"$char_entangled"!=""} {
                #format char_entangled %l $char_entangled;
                gt &08all chop $char_entangled&--
            };
            #var char_entangled {};
        };
        #if { ($autowalk) && ($time_since_last_move>$autowalk_allowed_downtime) && ($cur_opponents==0) } {
            #if {$showticker} {#show <175>Stuck $time_since_last_move s continue move};
            find_next_move
        }
    }
} {10}




#NOP #######################################################
#NOP Zone vars, actions
#NOP #######################################################

#var tellu[zindex] 0;
#var tellu[zone] {west,north,east};
#list tellu[zone] explode {,};

#var tellu_rooms[north] {34509,34531,34556,34529,34502,34527,34551,34526,34501,34528,34553,34530,34508,34532,34506,34554,34503,34552,34505,34557,34558,34533,34507,34555,34504,34529,34556,34531,34509};
#var tellu_rooms[west] {34543,34569,34518,34568,34542,34570,34520,34572,34549,34574,34525,34575,34550,34573,34548,34524,34547,34521,34546,34522,34523,34571,34545,34519,34544,34568,34518,34569,34543};
#var tellu_rooms[east] {34566,34516,34541,34517,34567,34515,34539,34513,34560,34511,34534,34510,34559,34512,34561,34535,34562,34538,34563,34537,34536,34514,34564,34540,34565,34517,34541,34516,34566};
#list tellu_rooms[north] explode {,};
#list tellu_rooms[west] explode {,};
#list tellu_rooms[east] explode {,};


#alias eval_mobs_in_room {
    #var tellu_mob_in_room %1;
    #math tellu_mobs_in_room {$tellu_mobs_in_room + $tellu_mob_in_room};
    #regexp {$tell_mobs[$tellu_zone][$tellu_mode][$MSDP_ROOM_TERRAIN]} {$tellu_target} 
        {#show <172> [$tellu_mob_in_room] TRUE - $tellu_mode $cur_room_vnum;#var botPositive $tellu_mob_in_room}
        {#show <131> [$tellu_mob_in_room] FALSE - $tellu_mode $cur_room_vnum;#var botNegative $tellu_mob_in_room} 
}

#function verifyTelluZone {
    #var tellu_zone_correct 0;
    #regexp {$tellu_rooms[$tellu_zone]} {$cur_room_vnum} {#var tellu_zone_correct 1};
    #return $tellu_zone_correct
}


#NOP #######################################################
#NOP Mob vars, actions
#NOP #######################################################
#var botPostitive 0;
#var botNegative 0;
#var tellu_mobs_in_room 0;

#var tell_mobs[east][normal][Forest] {"snap", "scarab", "wolf"};
#var tell_mobs[east][normal][Desert] {"topiary", "snap", "wolf"};
#var tell_mobs[east][normal][Tundra] {"scarab", "topiary"};
#var tell_mobs[east][clear][Forest] {"tree", "topiary"};
#var tell_mobs[east][clear][Desert] {"scarab"};
#var tell_mobs[east][clear][Tundra] {"wolf", "snap"};

#var tell_mobs[west][normal][Forest] {"snap", "topiary", "wolf"};
#var tell_mobs[west][normal][Desert] {"scarab", "topiary"};
#var tell_mobs[west][normal][Tundra] {"scarab", "snap", "wolf"};
#var tell_mobs[west][clear][Forest] {"scarab"};
#var tell_mobs[west][clear][Desert] {"wolf", "snap"};
#var tell_mobs[west][clear][Tundra] {"tree", "topiary"};

#var tell_mobs[north][normal][Forest] {"scarab", "topiary"};
#var tell_mobs[north][normal][Desert] {"snap", "scarab", "wolf"};
#var tell_mobs[north][normal][Tundra] {"topiary", "snap", "wolf"};
#var tell_mobs[north][clear][Forest] {"wolf", "snap"};
#var tell_mobs[north][clear][Desert] {"tree", "topiary"};
#var tell_mobs[north][clear][Tundra] {"scarab"};

#var tellu_stats[average_kill_time] 0;
#var tellu_stats[revive] 0;
#var tellu_stats[fury] 0;
#var tellu_stats[prudent] 0;
#var tellu_stats[scarab-kin] 0;
#var tellu_stats[topiary] 0;
#var tellu_stats[tundra-snap] 0;


#nop LOWER FLOOR
#action {A large, glowing scarab stands here in a defensive posture.%1} {#var tellu_target scarab;eval_mobs_in_room @mob_count{"%1"}}
#action {A large wolf, with icy-blue fur stands here observing.%1} {#var tellu_target wolf;eval_mobs_in_room @mob_count{"%1"}}
#action {An extremely stout tree stands here, wavering slowly.%1} {#var tellu_target topiary;eval_mobs_in_room @mob_count{"%1"}}
#action {A Tellurian scarab-kin is here looking alert.%1} {#var tellu_target scarab;eval_mobs_in_room @mob_count{"%1"}}
#action {A Tellurian tundra-snap is here looking alert.%1} {#var tellu_target wolf;eval_mobs_in_room @mob_count{"%1"}}
#action {A Tellurian topiary is here looking alert.%1} {#var tellu_target topiary;eval_mobs_in_room @mob_count{"%1"}}

#action {a Tellurian blood-mage begins searching their sector for those responsible for the carnage.} {#show <143>Mage has spawn}

#action {A Tellurian blood-mage is hovering here.} {#var tellu_target mage;#if {$killtarget} {kill $tellu_target};#if {$marktarget} {: marks $tellu_target};#if { ("$MSDP_CLASS"=="Wizard") || ("$MSDP_CLASS"=="Prophet")} {dmagic mage};#if { ("$MSDP_CLASS"=="Paladin") } {glory mage}}
#action {A visibly experienced mage stands here, protecting Telluria.} {#var tellu_target mage;#if {$killtarget} {kill $tellu_target};#if {$marktarget} {: marks $tellu_target};kill mage;#if { ("$MSDP_CLASS"=="Wizard") || ("$MSDP_CLASS"=="Prophet")} {dmagic mage};#if { ("$MSDP_CLASS"=="Paladin") } {glory mage}}
#action {A Tellurian blood-mage is dead!  R.I.P.} {send_to_comms_session <170>Tellurian(<110>$cur_room_vnum<170>) $tellu_mode <110> Killed <110>%1<170>  Zone/Terrain:<110>$tellu_zone/$MSDP_ROOM_TERRAIN<170>;tellu_mob_dead}

#action {A terrifying scream pierces the ears as GRODAN emerges from his slumber!} {#show <143>UPPER FLOOR OPEN;#delay 2 {tellu stop}}


#nop UPPER FLOOR
#action {A Tellurian fury is hovering here.} {#var tellu_target fury;#if { ("$MSDP_CLASS"=="Wizard") || ("$MSDP_CLASS"=="Prophet")} {#var bot[damage][single] dmagic};#if { ("$MSDP_CLASS"=="Paladin") } {#var bot[damage][single] glory}}

#action {A Tellurian elder is hovering here.} {#var tellu_target elder;#if { ("$MSDP_CLASS"=="Wizard") || ("$MSDP_CLASS"=="Prophet")} {#var bot[damage][single] dmagic};#if {$marktarget} {: marks $tellu_target}}

#action {A visage of Grodan is hovering here.} {#var tellu_target grodan;#if {$marktarget} {: marks $tellu_target}}

#action {Grodan is here looking alert.} {#var tellu_target grodan;#if { ("$MSDP_CLASS"=="Wizard") || ("$MSDP_CLASS"=="Prophet")} {#var bot[damage][single] dmagic};#if { ("$MSDP_CLASS"=="Paladin") } {#var bot[damage][single] glory}}

#action {Grodan gleams as the remaining elders infuse him with their life essence.} {#show <131>STILL ELDERS ALIVE, MIRACLE!!!}
#action {Grodan glimmers as the remaining visages infuse him with their life essence.} {#show <131>VISAGES SPAWNED, MIRACLE!!!}

#action {All of Telluria shakes and rumbles as the ground shifts.} {#var tellu_mode normal;gt ZONE RESET}


#action {A Tellurian %1 says, 'Ahh, yes.%2The %3 shall revive my body!'} {
    #var tellu_stats[%1] @increment{$tellu_stats[%1]};
    #var tellu_stats[revive] @increment{$tellu_stats[revive]};
    #var lastkilltime $MSDP_UPTIME;
    #math tellu_kill_timer { $MSDP_UPTIME - $tellu_kill_timer };
    #show <172>GOOD KILL on [%1] in [%3]!!    zone:[$tellu_zone]  KillTime: $tellu_kill_timer(s);
    tellu_mob_dead
};
#action {A Tellurian %1 says, 'Ahh, yes.%2The %3 shall revive my body, and {fuel |}my FURY!'} {
    #var tellu_stats[%1] @increment{$tellu_stats[%1]};
    #var tellu_stats[fury] @increment{$tellu_stats[fury]};
    #var lastkilltime $MSDP_UPTIME;
    #math tellu_kill_timer { $MSDP_UPTIME - $tellu_kill_timer };
    #show <Bfca><F000>FURY KILL on [%1] in [%3]!!    zone:[$tellu_zone]  KillTime: $tellu_kill_timer(s);
    tellu_mob_dead
};
#action {A Tellurian %1 says, 'Ahh, yes.%2The %3, a prudent resting place.'} {
    #var tellu_stats[%1] @increment{$tellu_stats[%1]};
    #var tellu_stats[prudent] @increment{$tellu_stats[prudent]};
    #var lastkilltime $MSDP_UPTIME;
    #math tellu_kill_timer { $MSDP_UPTIME - $tellu_kill_timer };
    #show <131>VERY BAD KILL on [%1] in [%3]!!    zone:[$tellu_zone]  KillTime: $tellu_kill_timer(s);
    #if {"$tellu_mode"=="normal"} {
        gt BAD KILL;
    }
    send_to_comms_session <170>Tellurian(<110>$cur_room_vnum<170>) $tellu_mode <110>BAD KILL on <110>%1<170>  Zone/Terrain:<110>$tellu_zone/$MSDP_ROOM_TERRAIN<170>;
    tellu_mob_dead
};


#action {A Tellurian %1 comes to a Tellurian %2's aid.} {safetokill {%1} {%2} {} {JOINED}}
#action {A Tellurian %1 arrives from the %2.} {safetokill {%1} {} {%2} {ARRIVES}}

#action {A Tellurian %1 utters the words 'unsohaiorz'} {#nop show <131>%1 ENDS COMBAT}
#action {A Tellurian %1 steps out of the shadows.} {#nop show <131>%1 JOINER!!!!}
#action {A Tellurian fury steps out of the shadows.} {#nop show <131>FURY JOINED THE FIGHT!!!}

#alias safetokill {
    #nop %1 joiner, %2 aided, %3 direction, %4 action ;
    #show \n<132>>%1< >%2< >%3< >%4<;
    #switch {"%1"} {
        #case {"tundra-snap"} {#var tellu_joiner wolf};
        #case {"topiary"} {#var tellu_joiner topiary};
        #case {"scarab-kin"} {#var tellu_joiner scarab};
    };
    #regexp {$tell_mobs[$tellu_zone][$tellu_mode][$MSDP_ROOM_TERRAIN]} {$tellu_joiner} 
    {
        #nop MOB in safe room;
        #if {"%4"=="JOINED"} {
            #if {"@group_leader{}"=="$MSDP_CHARACTER_NAME"} {gt $tellu_joiner JOINED %2, SAFE kill} {#show <132>$tellu_joiner JOINED %2, SAFE kill};
        };#else {
            #show <172>$tellu_joiner ARRIVED from %3, SAFE KILL - [$tellu_zone]  [$tellu_mode]  [$MSDP_ROOM_TERRAIN]
        }
    }
    {
        #nop MOB in BAD room;
        #if {"%4"=="JOINED"} {
            #if {"@group_leader{}"=="$MSDP_CHARACTER_NAME"} 
                {gt $tellu_joiner JOINED %2, BAD kill;#nop delay 2 {gt &08all calm $tellu_joiner&--}} 
                {#show <132>$tellu_joiner JOINED %2, BAD kill;#nop delay 2 {gt &08all calm $tellu_joiner&--}};
        };#else {
            #show <131>$tellu_joiner ARRIVED from %3, BAD KILL - [$tellu_zone]  [$tellu_mode]  [$MSDP_ROOM_TERRAIN];
            #nop delay 2 {gt &08all calm $tellu_joiner&--}
        }
    };
    #var tellu_joiner {};
}


#NOP #######################################################
#NOP Utilities
#NOP #######################################################
#alias tellu_debug {#if {$tellu_debug} {#show %1}}


#action {^%1 chops up the vines entangling %2.} {
    #format char_entangled %l $char_entangled;
    #if { ("$char_entangled"!="") && ("%2"=="$char_entangled") } {
        #var char_entangled {}
    };
    #delay {2} {nco room_clear;find_next_move}
};

#action {^%1 tells you, 'sum me'} {
    #regexp {$need_summons} {%1} 
    {#show Already added} 
    {#show Add to summon;tell %1 Your summon request has been queued.. please wait;#format sumname %l %1;#list need_summons add $sumname};
} 
{2}

#alias tellu_summon {
    #if {&need_summons[]>0} {
        #loop 1 &need_summons[] {id} {
            #nop gt all sum $need_summons[$id];
            #nop gt all portal $need_summons[$id];
            #if { ("$MSDP_CLASS"=="Prophet") || ("$MSDP_CLASS"=="Templar") || ("$MSDP_CLASS"=="Necromancer") } {sum 0.$need_summons[$id]};
            #if {"$MSDP_CLASS"=="Wizard"} {portal 0.$need_summons[$id]}
        };
        #var need_summons {};
    }
}

#alias updategroupname {
    #var groupsize &MSDP_GROUP[];
    #if {$oldgroupsize!=$groupsize} {
        #math groupsizefree {9-$groupsize};
        #if {$groupsizefree==1} 
        {#show <143>Tellurian: $groupsizefree open spot} 
        {#show <143>Tellurian: $groupsizefree open spots}
    };
    #var oldgroupsize $groupsize;
}


#function visualizeOdometer {
    #var odobar {};
    #local _temp_odo_bar $_meter[KILLS];
    #list _temp_odo_bar sort;
    #list _temp_odo_bar reverse;
    #local _temp_odo_bar_max $_temp_odo_bar[0];

    #loop 1 &_meter[KILLS][] id {
        #math _odo_bar_current { @pct{$_meter[KILLS][$id];$_temp_odo_bar_max} };
        #format _odo_bar_current {%d} {$_odo_bar_current};
        #if {$MSDP_WORLD_TIME != $id} {
            #cat odobar {@colorPctBlock{$_odo_bar_current}}
        };#else {
            #cat odobar {<bffffff><f000000>■}
        }
    };
    #cat odobar {<B538d87>};
    #return $odobar
}


event_register {variable cur_room_vnum} {right} {tellu_bot_info};
#alias tellu_bot_info {
	#if $tellu_mode_running {
        #format tellu_bot_info[1] {<B538d87><Fffffff>Zone:<Fd5d8d6>%-5s<Fffffff> (<Fd5d8d6>%-6s<Fffffff>) WayP:<Fd5d8d6>%-5s<Fffffff> (<Fd5d8d6>4<Fffffff>)} {$tellu_zone} {$tellu_mode} {$destination} {&waypoints[]};
        #format tellu_bot_info[2] {<B538d87><Fffffff>Delays Walk:<Fd5d8d6>%-5s<Fffffff> Death:<Fd5d8d6>%s<Fffffff> Zone:<Fd5d8d6>%s<Fffffff>} {$autowalk_delay} {$death_delay} {$zonechange_delay};
        #format tellu_bot_info[3] {<B538d87><Fffffff>Lastmove <Fd5d8d6>%-2s<Fffffff> Allowed:<Fd5d8d6>35<Fffffff>} {$time_since_last_move} {$autowalk_allowed_downtime};
        #format tellu_bot_info[4] {<B538d87><Fffffff>Prudent:<Fd5d8d6>%s<Fffffff> Revive:<Fd5d8d6>%s<Fffffff> Fury:<Fd5d8d6>%s<Fffffff>} {$tellu_stats[prudent]} {$tellu_stats[revive]} {$tellu_stats[fury]};
        #format tellu_bot_info[5] {<B538d87><Fffffff>Odometer: %s} {@visualizeOdometer{}};
    };
	#else {
        #list tellu_bot_info clear;
        #format tellu_bot_info[1] {<B538d87><Fffffff>Tellu Bot Offline};
	};
    #if {@is_alias{display_right_tiles}} {display_right_tiles};
}
