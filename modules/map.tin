#nop --
#nop Class Definitions
#nop --

#var map-description {description}
#var map-help {help file}
#var map-register-delay 3

#nop --
#nop Modloader Stuff
#nop --

#alias map-register {
	#if {!@isloaded{functions}} {
		#showme ERROR: functions module not loaded;
		fail_module map;
		#class map kill
	};
	#elseif {!@isloaded{msdp}} {
		#showme ERROR: msdp module not loaded;
		fail_module map;
		#class map kill
	};
	#elseif {!@isloaded{layout}} {
		#showme ERROR: layout module not loaded;
		fail_module map;
		#class map kill
	};
	#elseif {!&{MSDP_ROOM_VNUM}} {
		#showme <fcc>ERROR: MSDP values not populated, will reload map in <ccf>5<fcc> seconds.;
		fail_module map;
		#class modloader assign {#line oneshot #tick {reload map} {load_module map} {5}};
		#class map kill
	};
	#else {
		#map goto {${MSDP_ROOM_VNUM}} {dig};
		register_module map;
		layout_init;
	}
}

#nop -- ---------------------------------------------------------------
#nop -- Variables
#nop -- ---------------------------------------------------------------

#map create 100000;
#map flag nofollow;
#map flag vtmap on;
#map flag static;
#map flag AsciiGraphics on;
#map read $db/msdp.map

#map terrain {City} {<f2232ff>‚ñí} DENSE WIDE
#map terrain {City Bridge Path} {<Feeeeee>‚ñí} DENSE
#map terrain {City Field} {<F39c57e>‚ñí} DENSE FADEOUT
#map terrain {City Path} {<Feeeeee>‚ñí} DENSE FADEOUT
#map terrain {Deep Water} {<f2232ff>‚ñí} DENSE WIDE
#map terrain {Desert} {<cca>¬∑} DENSE NARROW
#map terrain {Field} {<128>¬∑} DENSE WIDE
#map terrain {Field Pasture} {<F39c57e>‚ñí} DENSE FADEOUT
#map terrain {Field Path} {<Fde9f3c>‚ñí} DENSE FADEOUT
#map terrain {Forest} {<228>^} DENSE FADEOUT
#map terrain {Forest Path} {<Fde9f3c>‚ñí} DENSE NARROW FADEOUT
#map terrain {Hills} {<f999999>‚ñ≤} DENSE NARROW
#map terrain {Hills Path} {<Fde8f2c>‚ñí} DENSE FADEOUT
#map terrain {Inside} {<f707880>‚ñí} DENSE WIDE
#map terrain {Inside City} {<Fc4c369>‚ñí} DENSE FADEOUT
#map terrain {Inside City Path} {<Feeeeee>‚ñí} DENSE FADEOUT
#map terrain {Inside Stairs} {<F959441>‚ñí} DENSE FADEOUT
#map terrain {Mountains} {<f666666>‚ñ≤} DENSE WIDE
#map terrain {Path} {<Fde9f3c>‚ñí} DENSE FADEOUT
#map terrain {Swamp} {<228>‚üë} DENSE WIDE
#map terrain {Underground} {<f666666>v} DENSE FADEOUT
#map terrain {Water} {<f2284ff>‚ñí} DENSE WIDE

#function getRoomColor {
    #if {"%1" == "Field"} {#var result <B31a354><FFFFFFF>};
    #elseif {"%1" == "Field Bridge"} {#var result <B31a354><FFFFFFF>};
    #elseif {"%1" == "Field Beach"} {#var result <B31a354><FFFFFFF>};
    #elseif {"%1" == "Desert"} {#var result <Bfeb24c>};
    #elseif {"%1" == "Forest"} {#var result <B31a354><FFFFFFF>};
    #elseif {"%1" == "Trail"} {#var result <Bbdbdbd>};
    #elseif {"%1" == "Hills"} {#var result <B8d8d8d>};
    #elseif {"%1" == "Mountain"} {#var result <B636363>};
    #elseif {"%1" == "Peak"} {#var result <BDDDDDD>};
    #elseif {"%1" == "Air"} {#var result <BFFFFFF>};
    #elseif {"%1" == "City"} {#var result <Bf7fcb9>};
    #elseif {"%1" == "Water"} {#var result <Ba6bddb><FFFFFFF>};
    #elseif {"%1" == "Shallow Water"} {#var result <Ba6bddb><FFFFFFF>};
    #elseif {"%1" == "Deep Water"} {#var result <B2b8cbe><FFFFFFF>};
    #elseif {"%1" == "Underwater"} {#var result <B3182bd><FFFFFFF>};
    #elseif {"%1" == "Beach"} {#var result <Bffeda0>};
    #elseif {"%1" == "Jungle"} {#var result <B31a354>};
    #elseif {"%1" == "Snow"} {#var result <BEEEEEE>};
    #elseif {"%1" == "Swamp"} {#var result <Bbcbddc>};
    #elseif {"%1" == "Bridge"} {#var result <B756bb1>};
    #elseif {"%1" == "Inside"} {#var result <Bf7fcb9>};
    #else {#var result %1};
}


#list mapZoneBlacklist create {Unknown};

#nop -- ---------------------------------------------------------------
#nop -- Aliases
#nop -- ---------------------------------------------------------------


#alias mapRoom {
	#if {"$MSDP_ROOM_VNUM"!="?"} {
		#map goto {$MSDP_ROOM_VNUM} {dig};
	};
	#map set roomarea $MSDP_AREA_NAME;
	#map set roomname $MSDP_ROOM_NAME;
	#map set roomterrain @strip_ansi{$MSDP_ROOM_TERRAIN};
	#map set roomcolor @getRoomColor{@strip_ansi{$MSDP_ROOM_TERRAIN}};

	#if {@mapZoneBlacklist{$MSDP_AREA_NAME}} {#return};

	#foreach {north;south;east;west;up;down} {EXIT} {

		#if {&MSDP_ROOM_EXITS[$EXIT]} {
			#map get {roomexits} {EXIT_LIST};
			#if {&EXIT_LIST[$EXIT] == 0}
			{
				#map get {roomvnum} {EXIT_VNUM} {$MSDP_ROOM_EXITS[$EXIT]};
				#if {("$MSDP_ROOM_EXITS[$EXIT]" != "?") &&
					("$MSDP_ROOM_EXITS[$EXIT]" != "L") &&
					("$MSDP_ROOM_EXITS[$EXIT]" != "C")} {
					#map dig {@dA{$EXIT}} {$MSDP_ROOM_EXITS[$EXIT]};
				};
				#if {$EXIT_VNUM == 0}
				{
					#map set {roomcolor} {<118>} {$MSDP_ROOM_EXITS[$EXIT]}
				}
			}
		} {
			#nop -- Room exit doesn't exist, delete;
			#map get {roomexits} {EXIT_LIST};
			#if {&EXIT_LIST[$EXIT] != 0} {
				#map delete $EXIT
			};
		}

	};

}

#alias createExit {
	#map get {roomexits} {EXIT_LIST};
	#if { ($EXIT_LIST[@dA{$prevdir}]>0) && ("$MSDP_ROOM_EXITS[$prevdir]" == "?") } 
	{ 
		#nop LINK ALREADY EXITS; 
	} {
		#nop NO EXIT EXISTS, CREATE IT;
		#map link @dA{$prevdir} $old_vnum both;
	}
}

#alias n {north;#var curdir north;#var prevdir south}
#alias e {east;#var curdir east;#var prevdir west}
#alias w {west;#var curdir west;#var prevdir east}
#alias s {south;#var curdir south;#var prevdir north}
#alias u {up;#var curdir up;#var prevdir down}
#alias d {down;#var curdir down;#var prevdir uu}

#nop -- ---------------------------------------------------------------
#nop -- Actions
#nop -- ---------------------------------------------------------------

#nop -- ---------------------------------------------------------------
#nop -- Events
#nop -- ---------------------------------------------------------------
#event {SESSION DISCONNECTED} {#map write $db/msdp.map}
#event {MAP ENTER ROOM} {
	#if {"$MSDP_AREA_NAME"=="The Wilderness"} {
		#show <131>ENTER ROOM OLD:$old_vnum NEW:$MSDP_ROOM_VNUM;
		createExit;
		#var old_vnum $MSDP_ROOM_VNUM
	}
}

#nop -- ---------------------------------------------------------------
#nop -- Functions
#nop -- ---------------------------------------------------------------
#function dA {
    #if {"%1" == "east"} {#var result e};
    #elseif {"%1" == "west"} {#var result w};
    #elseif {"%1" == "north"} {#var result n};
    #elseif {"%1" == "south"} {#var result s};
    #elseif {"%1" == "up"} {#var result u};
    #elseif {"%1" == "down"} {#var result d};
    #else {#var result %1};
}

#function mapZoneBlacklist {
	#list mapZoneBlacklist find {%0} {result}
}


#ALIAS {^mark %slist$}
{
    #local {i} {};
	#echo {<170>Use #map exitflag <dir> hide - to hide area before enter};
    #foreach {*{map_marks[]}} {i}
    {
        #echo {<170>$i - <130>${map_marks[$i]}}
    }
}
{7}

#ALIAS {^mark note %1}
{
	#map set roomnote {%1};
	#var {MAP[dirty]} {1};
}
{8}

#ALIAS {^mark %1} {
	#if { &{map_marks[%1]} } {
		#map set roomsymbol { ${map_marks[%1]} };
		#var {MAP[dirty]} {1};
	};
	#else {
		#echo {<170>Mark "%1" not found. Use "mark list" to see all possible marks.}
	}
}
{9}

#VARIABLE {map_marks}
{
	{anchor} {[‚öì]}
	{castle} {[üè∞]}
	{chest} {[üíé]}
    {clear} {}
	{fountain} {[‚õ≤]}
	{guild} {üìú \b}
	{key} {[üóù \b]}
	{lever} {[‚õ©]}
	{palace} {[üïå]}
	{pawn} {[‚ôü]}
	{quest} {[üó®]}
	{shop} {[ü™ô]}
    {smob} {[üíÄ]}
	{tame} {[üêÜ]}
	{time} {[‚åõ]}
	{town} {[üõñ]}
	{vulcano} {[üåã]}
    {wolf} {[üê∫]}
	{zone} {[üåê]}
}

#EVENT {PRESSED SECURE LINK MAP_MOVE MOUSE BUTTON ONE}
{
	%4;
};

#EVENT {MAP ROOM SHORT-CLICKED MOUSE BUTTON ONE}
{

	#LOCAL {_vnum} {%4};

	#LOCAL {_current_vnum} {};
	#MAP get roomvnum {_current_vnum};
	#IF {$_current_vnum == $_vnum}
	{
		#RETURN;
	};

    #MAP find {$_vnum};
    #path run {$PATHS[current_speed]};
};

#FUNCTION {_map_save}
{
    #map write {$db/msdp.map};
    #var {MAP[dirty]}{0};
    #RETURN {#NOP};
};

#alias {savemap}
{
    #show {<020>Saving current map...};
    #map write {$db/msdp.map};
    #var {MAP[dirty]}{0};
};

#nop -- vim: syntax=tt
