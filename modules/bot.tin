#nop --
#nop Class Definitions v0.02
#nop We are on GitHub
#nop --



#nop TODO:
#NOP Botpause
#NOP When friending animals make sure refriendship timer starts
#NOP When exploring using mapping layout - show group info, and nearby notes, https://github.com/Telsak/mozart/blob/master/mapper.mod
#NOP 
#NOP Stock up on free purples - recall scrolls;
#NOP Other member skinning;
#NOP Setup zone switching, go meta, resume zone, integrate commune/throne
#NOP if fighting too many mobs, autorecall group
#NOP EXP tracker (per tick, identify spawntime) Should be able to start for custom run/zone
#NOP EXP tracker Cleanup existing

#NOP Fix 2 x convert;
#NOP DONE - Equ damage tracker 
#NOP DONE - Make path able to walk uing vnum;
#NOP DONE - Autometa - rem all wear all;







#var bot-description {Utilities for botting}
#var bot-help {
Commands:\n
\tCurrent role: $bot[role]   Available roles: leader/tank/stabber/damage/healer/OFF\n
\tdamage <spell> , current $bot[damage]\n
\n
\tToggle automatic casting/moving:  botcast: $bot[cast]  botmove: $bot[move]\n
\n
\tWill autorun zone:  $bot[autozone]\n
\n
}

#nop --
#nop Modloader Stuff
#nop --

#alias bot-register {
	#if {@isloaded{modloader}} {
		register_module bot;
		bot_init;
	} {
		#class bot kill
	}
}


#NOP #######################################################
#NOP Bot unique variables
#NOP #######################################################

#NOP ROLES: tank/damage/healer/none
#var bot[role] damage;
#var bot[running] 1;
#var bot[paused] 0;
#var bot[move] 0;
#var bot[autozone] 0;
#var bot[hide] {};
#var bot[cast] 1;
#var bot[join] 0;
#var bot[poke] 0;
#var bot[markcommand] {marks};
#var bot[pokecommand] pokes;
#var bot[damage] {};
#var bot[nextAction] {};
#var bot[rescue] 0;
#var bot[mount][name] {};
#var bot[examine] 1;

init bot[role2] preferences damage;
init bot[cast2] preferences on;
init bot[poke2] preferences off;
init bot[rescue2] preferences off;

#var master[active] 1;

#var bot[debug] 0;

#var class[lvl_path] {2s2e2se};

#var container {backpack};
#var weapon_pri {};
#var weapon_sec {};

#var stock[recall] 1;
#var stock[purple] 1;

#var timer[waitkill] 2;

#alias show_debug {#if $bot[debug] {#show %1}}

#alias bot_init {
	#NOP #######################################################;
	#NOP Account Specific:										;
	#NOP #######################################################;
	#switch {"$MSDP_ACCOUNT_NAME"} {
		#case {"HouseOfAnasasi"} {
			#var communication[left] {&r<&09<&09<&0d<&0f<&--};
			#var communication[right] {&0f>&0d>&09>&09>&r>&--};
		};
		#case {"Eremitage"} {
			#var communication[left] {&02-&0a~&03=&0b>&0b#&--};
			#var communication[right] {&0b#&03<&0b=&0a~&02-&--};
		};
		#case {"Kruoill"} {
			#var communication[left] {&0f.&0eo&06o&0cO&04*&--};
			#var communication[right] {&04*&0cO&06o&0eo&0f.&--};
		};
		#case {"Valhalla"} {
			#var communication[left] {&05@&0dO&05*&0dO&05@&--};
			#var communication[right] {&05@&0dO&05*&0dO&05@&--};
		};
	};
	#alias gtell {gt $communication[left] %1 $communication[right]};

	#NOP #######################################################;
	#NOP Class Specific: Necromancer							;
	#NOP #######################################################;
	#if { "$MSDP_CLASS" == "Necromancer" } {
		#var bot[damage] darkfire;
		#var bot[spellCorpse] vdrain; #NOP options:   edrain/vdrain/viscera;
		#var bot[spellSustain] drain;

		#var autobloodlust on;
		#var autocorpsevisage on;
		pref autobuf shapechange lich;
		#var autoaura on;
		#var autowraithform on;
		#var autogrim on;
		#var autozombieform on;
	};

	#NOP #######################################################;
	#NOP Class Specific: Prophet								;
	#NOP #######################################################;
	#if { "$MSDP_CLASS" == "Prophet" } {
		#var bot[damage] harm;
		#var bot[spellCorpse] #nop;
		#var bot[spellSustain] heal;

		#var autobless on;
		#var autodarmor on;
		#var autovigor on;
		#var autosanctuary on;
	};

	#NOP #######################################################;
	#NOP Class Specific: Barbarian								;
	#NOP #######################################################;
	#if { "$MSDP_CLASS" == "Barbarian" } {
		botrole damage;
		#var bot[cast] 1;
		#var bot[damage] {kick};

		#var toggle[focus] on;
		#var toggle[warpaint] on;
		#var toggle[warcry] on;
	};

	#NOP #######################################################;
	#NOP Class Specific: Assassin								;
	#NOP #######################################################;
	#if { ("$MSDP_CLASS" == "Assassin") && ("$MSDP_CHARACTER_NAME" != "Shaita") } {
		botrole stabber;
		#var bot[cast] 1;
		#var bot[damage] {backstab};
		#var bot[hide] {hide};
	};

	#NOP #######################################################;
	#NOP Class Specific: Druid									;
	#NOP #######################################################;
	#if { ("$MSDP_CLASS" == "Druid") && ("$MSDP_CHARACTER_NAME" != "Malai") } {
		botrole leader;
		#var bot[move] 0;
		#var bot[autozone] 1;
		#var bot[cast] 1;
		#var bot[poke] 0;
		#var bot[join] 0;
		#var bot[damage] {tornado};

		#var autobark on;
		#var autobless on;
		#var autoffire on;
		#var autovigor on;

		profon skinning;
		group all;
	};
	#NOP #######################################################;
	#NOP PARAGON Specific:										;
	#NOP #######################################################;
	#switch {"$MSDP_CHARACTER_NAME"} {
		#case {"Krall"} {
			botrole tank;
			#var bot[damage] kill;
			#var bot[spellSustain] wio;
			botcast 1;
			botpoke 0;
			botmove 0;
			#var bot[mount][name] lightning;
			profoff;
			#var container {backpack};
			#var weapon_pri {dagger};
			#var weapon_sec {hermes};
		};
		#case {"Malai"} {
			group all;
			botrole leader;
			#var bot[damage] {};
			#var bot[spellSustain] heal;
			botcast 1;
			botpoke 1;
			botmove 0;
			#var bot[mount][name] dragonne;
			#var container {backpack};
			#var weapon_pri {knife};
			#var weapon_sec {};
		 };
		#case {"Shaita"} {
			botrole damage;
			#var bot[damage] backstab;
			#var delay[stabber] 0.6;
			botcast 1;
			botpoke 0;
			botmove 0;
			#var bot[hide] {hide};
			#var container {backpack};
			#var weapon_pri {assassination};
			#var weapon_sec {assassination};
		};
	};
	generate_bot_info;
}


#NOP #######################################################;
#NOP Bot actions											;
#NOP #######################################################;

#alias {botcast} {
	#switch {"%0"} {
		#case {"1"} {
			#show <Ffff><B595>Autocast ON;
			#var bot[cast] 1;
		};
		#default {
			#show <Ffff><B595>Autocast OFF;
			#var bot[cast] 0;
		}
	}
}

#alias {botpoke} {
	#switch {"%0"} {
		#case {"1"} {
			#var bot[poke] 1;
			#var bot[pokecommand] {: pokes};
			#show <Ffff><B595>Poke ON : $bot[pokecommand];
		};
		#case {"2"} {
			#var bot[poke] 1;
			#var bot[pokecommand] {oo kill};
			#show <Ffff><B595>Follower tanks ON;
		};
		#default {
			#var bot[poke] 0;
			#var bot[pokecommand] {: pokes};
			#show <Ffff><B595>Poke OFF;
		}
	}
}


#alias {botmove} {
	#switch {"%0"} {
		#case {"1"} {
			#if { "$zone[name]"!==""} {
				#var bot[move] 1;
				#var zone[active] 1;
			};
			#else {
				#show NO ZONE LOADED - Wont automove;
			}
		};
		#default {
			#show <Ffff><B595>Autoticker OFF;
			#var bot[move] 0;
			#var zone[active] 0;
		}
	}
}

#ALIAS {botrole} {
	#var bot[poke] 0;
	#var lastkilltime $MSDP_UPTIME;
	#switch {"%0"} {
		#case {"leader"} {
			#var bot[running] 1;
			#var bot[role] leader;
			#var bot[poke] 1;
			#tick {determinbotaction} {determine_bot_action} {0.1};
		};
		#case {"tank"} {
			#var bot[running] 1;
			#var bot[role] tank;
			#var bot[join] 1;
			#var bot[rescue] 1;
			#tick {determinbotaction} {determine_bot_action} {0.1};
		};
		#case {"stabber"} {
			#var bot[running] 1;
			#var bot[role] stabber;
			#tick {determinbotaction} {determine_bot_action} {0.1};
		};
		#case {"damage"} {
			#var bot[running] 1;
			#var bot[role] damage;
			#tick {determinbotaction} {determine_bot_action} {0.1};
		};
		#case {"healer"} {
			#var bot[running] 1;
			#var bot[role] healer;
			#tick {determinbotaction} {determine_bot_action} {0.1};
		};
		#case {"OFF"} {
			#var bot[running] 0;
			#var bot[role] none;
			#untick {determinbotaction};
		};
		#default {
		#show Available roles: leader/tank/stabber/damage/healer/OFF;
		}
	};
	generate_bot_info;
}

#alias determine_bot_action {
	#var bot[nextAction] {};		
	#var bot[nextActionDebug] {};
	#math timesincelastkill { $MSDP_UPTIME - $lastkilltime };
	#if { @is_group_fighting{}==0 } {
		#var bot[nextActionDebug] {$bot[nextActionDebug] Fight:0};
		#if { ("$MSDP_CLASS"=="Druid") && (@pct{$MSDP_MANA;$MSDP_MANA_MAX}<50) && (@pct{$MSDP_MANA;$MSDP_MANA_MAX}>20) } {
			queueAdd any convert;
		};
		#else {
			#if { ("$bot[role]"=="leader") && ($timesincelastkill>$timer[waitkill]) } {
				#if { ("$MSDP_CLASS"=="Druid") && (@pct{$MSDP_MANA;$MSDP_MANA_MAX}<=20) } {
					queueAdd any convert;
				};
				#else {
					#if { "@findtarget{}"!="" } {
						#var bot[nextActionDebug] {$bot[nextActionDebug] Target:1};
						#if { $bot[poke] } {
							#var bot[nextAction] {queueAdd nco poke_target};
						};#else  {
							#var bot[nextAction] {queueAdd nco $bot[damage] @findtarget{}};
						};
					};
					#else {
						#var bot[nextActionDebug] {$bot[nextActionDebug] Target:0};
						#if { @can_group_move{} } {
							#var bot[nextActionDebug] {$bot[nextActionDebug] Move:1};
							#if { $zone[active] } { 
								#path get position zone[pathid];
								#math zone[remainingsteps] {$zone[pathlen]-$zone[pathid]+2};
								#math zone[runtime] {$MSDP_UPTIME-$zone[start]};
								#if { $zone[remainingsteps]>1 } {
									#if { ($bot[move]) } {
										#var bot[nextAction] {smart_move};
									};
									#else {
										#var bot[nextAction] {#nop};								
									}
								};#else {
									zone_end;
								};
							}
						};
					};
				};
			};
		};
	};
	#else {
		#var bot[nextActionDebug] {$bot[nextActionDebug] Fight:1};
		#if { @pct{$MSDP_HEALTH;$MSDP_HEALTH_MAX}<20 } {
			#var bot[nextActionDebug] {$bot[nextActionDebug], Too LOW recall };
			#var bot[nextAction] {queueAdd priority recall};
		}; #else {
			#if { "$MSDP_CLASS" == "Necromancer" || "$MSDP_CLASS" == "Demoniac" } {
				#if { @pct{$MSDP_HEALTH;$MSDP_HEALTH_MAX}<80 } {
					#if { @pct{$MSDP_OPPONENT_HEALTH;$MSDP_OPPONENT_HEALTH_MAX}>25 } {
						#var bot[nextActionDebug] {$bot[nextActionDebug], low life DRAIN };
						#var bot[nextAction] {queueAdd heal drain};
					}; #else {
						#var bot[nextActionDebug] {$bot[nextActionDebug], target too low, nuke };
						#var bot[nextAction] {queueAdd combat $bot[damage]};
					}
				}; #else {
					#var bot[nextActionDebug] {$bot[nextActionDebug], use $bot[damage]};
					#var bot[nextAction] {queueAdd combat $bot[damage]};
				};
			};
			#elseif { ("$bot[role]" == "healer") && (@pct{$MSDP_MANA;$MSDP_MANA_MAX}<75) } {
				#nop Don't do damage, mana too low;
			};
			#else {
				#var bot[nextActionDebug] {$bot[nextActionDebug], use $bot[damage]};
				#var bot[nextAction] {queueAdd combat $bot[damage]};
			}
		};
	};
	#math actionDelay {@mpoch{} - $spellLock};
	generate_bot_info;
}


#alias zone_automatic_restart {
	#TICKER {restartzone} {
		#if {$bot[autozone] && $zone[active]==0 && ("$MSDP_AREA_NAME"=="The Island of Na'Kana" || "$MSDP_AREA_NAME"=="Palannen")}  {
			#show starting zone;,;.;
		}
	} {10};
	#TICKER {gobacktozone} {
		#if {$bot[autozone] && "$MSDP_AREA_NAME"=="Rommena Countryside"} {
			#show CHECK GO BACK TO ZONE;#map run 32055
		}
	} {60};
}

#alias zone_automatic_restart_end {
	#UNTICKER {restartzone};
	#UNTICKER {gobacktozone};
}

#ticker autoticker {#if $bot[paused]==0 {-}} {1};

#alias - {
	show_debug {<Ffff><B595>$bot[nextActionDebug]};
	#if { $zone[active] || $bot[cast] } { $bot[nextAction] };
}
#alias , {#show <Ffff><B595>Load current zone;zone_load}
#alias . {#if { $MSDP_ROOM_VNUM != $zone[startroom] } {#show <131>Wrong start room, please move to: $zone[startroom];#map run $zone[startroom]};#else {,;l;botmove 1}}

#action {%1 utters the words 'qaizzfh waia'} {
	#if {@playerIsPresent{%1} && "$MSDP_CHARACTER_NAME"!="%1"} { #nop check if its a group member, only delay if you didnt cast the spell;
		#show Waiting for 10 sec;
		#math spellLock { @max{$spellLock;@mpoch{}} + 10000}
	}
}


#NOP #######################################################
#NOP Group actions
#NOP #######################################################
#action {^%w beckons you to follow.$} {fol %1}
#action {^%w starts following you.$} {#if @groupAmILeader{} {group %1}}

#action {is now a member of your group} {gt Welcome! }
#action {you start following} {gt Current role: $bot[role]}
#action {You now follow %1.} {#var leader %1}


#ALIAS {^all %1} {
	#if {"%1"!=""} {
		#SWITCH {"%1"} {
			#CASE {"list"} {#echo {All commands: &0ftemple home out heros equ dometa&--}};
			#CASE {"temple"} {gt all recall;recall};
			#CASE {"home"} {gt all recall;gt all home;gt all dep all;recall;home;dep all};
			#CASE {"out"} {gt all recall;recall};
			#CASE {"heros"} {gt all checkheros;checkheros};
			#CASE {"equ"} {gt all equ damage;equ damage};
			#CASE {"dometa"} {gt all dometa;#show Waiting 10 sec, then I will meta too;#ticker dometaticker {#unticker dometaticker;dometa} {10}};
		};	
	};
} {9}

#alias {checkheros} {#math nextlevel { $MSDP_LEVEL+1 };levelreq $nextlevel;}
#alias dometa {#if {$MSDP_ROOM_VNUM == 13200} {autometa}}
#action {The meta-sage tells you 'You have to remove ALL your items first.'} {checkheros;dress 0;autometa}

#action {<%1>  %2/ %3 {the|a|an| } %5} {#if {@pct{%2;%3}<100} {gt Damaged item: @colorPctIngame{@pct{%2;%3}}% &0f%5&--}}

#alias {dress %1} {
	#if {"$MSDP_CLASS"=="Druid"} {shapechange normal;};
	#if {"$MSDP_CLASS"=="Necromancer"} {mortify normal;};
	#if {"$MSDP_CLASS"=="Demoniac"} {demonform normal;};
	#if {%1==0} {
		rem all;
	};
	#else {
		wield $weapon_pri;
		grab $weapon_sec;
		wear all
	}
}

#NOP #######################################################
#NOP Bot panel
#NOP #######################################################
event_register {variable bot[nextAction]} {right} {generate_bot_info};
event_register {variable master[active]} {right} {generate_bot_info};
#alias generate_bot_info {
	#if $bot[running] {
		#format bot_info[1] {<B538d87><388><188>%s} {Bot:$bot[role], $bot[damage]  Mov: $bot[move]  Cast: $bot[cast]};
		#format bot_info[2] {<B538d87><388><188>%s} {Action:[$bot[nextAction]]};
		#format bot_info[3] {<B538d87><388><188>%s} {Target: [@findtarget{}]   SpellLock:$actionDelay};
		#if $zone[active] {
			#format bot_info[4] {<B538d87><388><188>%s} {Route: [$zone[pathid]/$zone[pathlen]] $zone[remainingsteps] left, path: [$zone[path_current]/$zone[path_total]] @return_min_sec{$zone[runtime]}};
		};
		#else {
			#format bot_info[4] {<B538d87><388><188>%s} {Route: Offline};
		};
		#if $master[active] {
			#math time1 {$MSDP_UPTIME - $master[list][1][timesinceclear]};
			#math time2 {$MSDP_UPTIME - $master[list][2][timesinceclear]};
			#format bot_info[5] {<B538d87><388><188>%s} {Next zone: $master[list][1][name] - @return_min_sec{$time1}};
			#format bot_info[6] {<B538d87><388><188>%s} {Upcoming zone: $master[list][2][name] - @return_min_sec{$time2}};
		}; #else {
			#format bot_info[5] {<B538d87><388><188>%s} {};
			#format bot_info[6] {<B538d87><388><188>%s} {};
		}
	};
	#else {
		#var bot_info {Bot: offline};
	};
    #if {@is_alias{display_right_tiles}} {display_right_tiles};
}

#if {&{right_tiles}} {
	set_right_tile 10 <B85678f> bot_info[%*] 6 tile;
	generate_bot_info;
}


#NOP #######################################################
#NOP Navigation and walking routes - MasterPlanner
#NOP #######################################################

#var master[active] 0;
#var master[current] 1;

#var master[list] {
	{1}{{name}{The Island of Na'Kana} {min}{35} {max}{100} {dirs}{gonaka} {timesinceclear}{$MSDP_UPTIME} {zonespawn}{0}};
	{2}{{name}{Thalos City} {min}{40} {max}{60} {dirs}{gothalos} {timesinceclear}{$MSDP_UPTIME} {zonespawn}{0}};
	{3}{{name}{Baramon Ingrol} {min}{30} {max}{60} {dirs}{gobaalor} {timesinceclear}{$MSDP_UPTIME} {zonespawn}{0}};
}
#nop start of zone set to $MSDP_UPTIME

#alias arrangezonelist {
	#list master[list] indexate timesinceclear;
	#list master[list] order;
	#list master[list] reverse;
	#show <131>Next zone is: $master[list][1][name]
}

#alias updatezonelastrun {
	#foreach {*master[list][]} {i} {
		#if {"%1"=="$master[list][$i][name]"} {
			#var master[list][$i][timesinceclear] {$MSDP_UPTIME};
		}
	}
}


#NOP #######################################################
#NOP Navigation and walking routes - Zones
#NOP #######################################################

#var zone[active] 0;
#var zone[minlevel] 0;
#var zone[maxlevel] 0;
#var zone[pathlen] 0;
#var zone[pathid] 0;
#var zone[runtime] 0;
#var zone[start] 0;
#var zone[startroom] 0;
#var zone[kills] 0;
#var zone[exp_start] 0;
#var zone[gold_start] 0;

#alias {autozone} {
	#switch {"%0"} {
		#case {"1"} {
			#show <Ffff><B595>Will automatically clear zone;
			#var bot[autozone] 1;
		};
		#default {
			#show <Ffff><B595>Will no longer restart zone;
			#var bot[autozone] 0;
		}
	}
}

#alias zone_load {
	#nop can be loaded with path id %1;
	cleartarget;
	#var zone[runtime] 0;
	#var zone[kills] 0;
	#var zone[start] $MSDP_UPTIME;
	#var zone[exp_start] $MSDP_EXPERIENCE;
	#var zone[gold_start] $MSDP_GOLD;
	#if { %1 > 0} {
		#var pathname zone[path%1];
		#var zone[path_current] %1;
	};#else {
		#var pathname zone[path];
		#var zone[path_current] 1;
	};
	#switch {"$MSDP_AREA_NAME"} {
		#case {"Thalos City"} {
			#var zone[name] {Thalos};
			#var zone[minlevel] 40;
			#var zone[maxlevel] 60;
			#var zone[startroom] 5200;
			#var zone[path_total] 1;
			#var zone[path] {w;n;n;n;u;d;w;s;w;w;n;e;w;w;w;u;d;s;s;e;s;w;s;e;n;w;s;s;s;u;d;e;e;e;w;n;w;e;e;w;n;w;e;e;s;e;n;w;n;w;s;w;n;n;e;e;w;w;s;e;e;e;e};
			#var zone[proflist] {{"The black lamia "}{} {"The lamia "}{} {"mimic "}{} {"target3"}};
			#var zone[allowAOE] 0;
		};
		#case {"Baramon Ingrol"} {
			#var zone[name] {Baramon Ingrol};
			#var zone[minlevel] 30;
			#var zone[maxlevel] 60;
			#var zone[startroom] 36239;
			#var zone[path_total] 4;
			#var zone[path] {nco enter tree;w;w;n;n;n;n;n;u;d;w;w;w;w;w;s;w;n};
			#var zone[path2] {nco enter tree;e;e;e;e;e;n;e;n;n;n;n;e;e;e;e;n;e;e;s;e;e;e;e;s;s;s;s;e;s;s;w;s;s;s;s;w;w;w;w;s;w;w;n;w;w;w;w;n;n;n;n;w;n;e;e};
			#var zone[path3] {d;s;e;s;e;nco enter rock;w;s;e;s;e;e;n;e;n;nco enter rock;e;e;n;e;n;n;w;n;w;nco enter rock;n;n;w;n;w;w;s;w;s;nco enter rock;n;w;s;w;s};
			#var zone[path4] {e;e;e;s;n;n;e;n;n;s;s;e;s;e;e;w;w;s;s;w;s;s};
			#var zone[proflist] {{"Sabrael "}{} {"Melkyal "}{} {"Barbelo of The Four "}{} {"Empyrean "}{} {"A cave monster "}{} {"A tunnel protector "}{} {"A tunnel hermit "}{} {"A dark halfling "}{} {"A fledgling fire drake "}{} {"A chubby troll "}{} {"A fearless bear "}{} {"A koala bear "}{}};
			

			#var zone[allowAOE] 0;
		};
		#case {"The Island of Na'Kana"} {
			#var zone[name] {The Island of Na'Kana};
			#var zone[minlevel] 35;
			#var zone[maxlevel] 85;
			#var zone[startroom] 32055;
			#var zone[path_total] 1;
			#nop var zone[path] {n;s;s;n;u;n;s;s;n;u;n;s;s;n;u;e;s;e;e;e;s;s;e;w;w;d;s;n;u;e;n;n;w;u;u;n;w;n;e;e;s;w;n;u;e;n;e;u;n;d;n;s;s;n;d;n;s;s;n;d;n;s;s;n;3u1s1d1w1s1w1d2s2d2w1n1w3d};
			#var zone[path] {mrun 32055;mrun 32056;mrun 32055;mrun 32057;mrun 32055;mrun 32052;mrun 32053;mrun 32052;mrun 32054;mrun 32052;mrun 32049;mrun 32050;mrun 32049;mrun 32051;mrun 32049;mrun 32048;mrun 32047;mrun 32046;mrun 32040;mrun 32039;mrun 32041;mrun 32042;mrun 32043;mrun 32044;mrun 32043;mrun 32045;mrun 32061;mrun 32062;mrun 32061;mrun 32045;mrun 32043;mrun 32042;mrun 32041;mrun 32039;mrun 32038;mrun 32017;mrun 32014;mrun 32015;mrun 32013;mrun 32011;mrun 32012;mrun 32016;mrun 32014;mrun 32011;mrun 32010;mrun 32018;mrun 32019;mrun 32020;mrun 32021;mrun 32023;mrun 32025;mrun 32023;mrun 32026;mrun 32023;mrun 32024;mrun 32027;mrun 32024;mrun 32028;mrun 32024;mrun 32029;mrun 32030;mrun 32029;mrun 32031;mrun 32039;mrun 32055};
			#var zone[proflist] {{"A kakapo "}{} {"A puffin "}{} {"A giant petrel "}{} {"A common murre "}{} {"A skua "}{} {"A northern gannet "}{} {"A sooty tern "}{} {"A weka "}{} {"A takahe "}{} {"A pelegornis "}{} {"A royal albatross "}{} {"A spectacled cormorant "}{} {"A giant moa "}};
			#var zone[allowAOE] 0;
		};
		#case {"Pillar Maze"} {
			#var zone[name] {Pillar Maze};
			#var zone[minlevel] 30;
			#var zone[maxlevel] 100;
			#var zone[startroom] 1000;
			#var zone[path_total] 1;
			#var zone[path] {n;u;d;w;s;s;n;e;d;n;w;w;u;u;u;u;s;n;e;e;s;w;d;w;e;d;w;s;s;e;n;e;d;w;w;s;n;u;u;s;w;e;w;e;w;d;s;u;n;w;enter pillar};
			#var zone[proflist] {"maze keeper "};
			#var zone[allowAOE] 1;
		};
	};
	#nop show load New path: $pathname;
	#path load $pathname;
	#path get length zone[pathlen];
	#path get position zone[pathid];
	#math zone[remainingsteps] {$zone[pathlen]-$zone[pathid]};
	#show <Ffff><B595>Zone loaded: $zone[name]   steps: $zone[pathlen]   path: [$zone[path_current]/$zone[path_total]];
	gt $communication[left] Zone loaded: $zone[name]   steps: $zone[pathlen]   path: [$zone[path_current]/$zone[path_total]] $communication[right];
}

#alias zone_end {
	#math zone[gold_earned] {$MSDP_GOLD-$zone[gold_start]};
	#math zone[exp_earned] {$MSDP_EXPERIENCE-$zone[exp_start]};
	#math zone[runtime-sec] { $zone[runtime] % 60 };
	#math zone[runtime-min] { $zone[runtime] / 60 };
	gt $communication[left] Zone: $zone[name], path [$zone[path_current] of $zone[path_total]] finished in $zone[runtime-min]m $zone[runtime-sec]s, $zone[kills] kills earned us @pretty_number{$zone[gold_earned]} gold and gained @pretty_number{$zone[exp_earned]} exp $communication[right];
	#var zone[active] 0;
	updatezonelastrun {$zone[name]}; #nop set zone last run to MSDP_UPTIME;
	#var zone[name] {};
	#var zone[path] {};
	#var zone[pathlen] {0};
	#var zone[pathid] {0};
	#var zone[allowAOE] 0;
	#var zone[proflist] {};
	#var zone[runtime] 0;
	#var zone[start] 0;
	#var zone[startroom] 0;
	#var zone[kills] 0;
	#var zone[exp_start] 0;
	#var zone[gold_start] 0;
	#var zone[gold_earned] 0;
	#var zone[exp_earned] 0;
	botmove;
	#if { $zone[path_total]>1 } {
		#if { $zone[path_current]<$zone[path_total] } { 
			#math zone[path_current] {$zone[path_current]+1};
			gt $communication[left] Short break 5s then we proceed with next path: $zone[path_current] $communication[right];
			#delay loadpath {zone_load $zone[path_current];botmove 1} 5;
		};
	};
}

#alias mrun {#path get position tp_id;#map run %1;#path load $zone[path];#path goto $tp_id}

#NOP #######################################################
#NOP Zone specific events
#NOP #######################################################
event_register {variable MSDP_AREA_NAME} {right} {generate_zone_info #nop};

#alias generate_zone_info {
	#show >>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<;
	#show >>> New Zone: $MSDP_AREA_NAME   ($MSDP_ROOM_VNUM) <<<;
	#show >>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<;
	#switch {"$MSDP_AREA_NAME"} {
		#case {"Thalos City"} {
			#var zone[proflist] {{"lamia "}{} {"mimic "}{} {"target3 "}};
			#var zone[allowAOE] 0;
		};
		#case {"Baramon Ingrol"} {
			#var zone[proflist] {{"Sabrael "}{} {"Melkyal "}{} {"Barbelo of The Four "}{} {"Empyrean "}{} {"A cave monster "}{} {"A tunnel protector "}{} {"A tunnel hermit "}{} {"A dark halfling "}{} {"A fledgling fire drake "}{} {"A chubby troll "}{} {"A fearless bear "}{} {"A koala bear "}{}};
			#var zone[allowAOE] 0;
		};
		#case {"The Island of Na'Kana"} {
			#var zone[proflist] {{"A kakapo "}{} {"A puffin "}{} {"A giant petrel "}{} {"A common murre "}{} {"A skua "}{} {"A northern gannet "}{} {"A sooty tern "}{} {"A weka "}{} {"A takahe "}{} {"A pelegornis "}{} {"A royal albatross "}{} {"A spectacled cormorant "}{} {"A giant moa "}};
			#var zone[allowAOE] 0;
		};
		#case {"Pillar Maze"} {
			#var zone[proflist] {"maze keeper "};
			#var zone[allowAOE] 1;
		};
		#case {"Tellurian Discordia"} {
			#var zone[proflist] {{"A tellurian tundra-snap "}{} {"A tellurian scarab-kin "}{}};
			#var zone[allowAOE] 0;
		};
	};
	#var zone_info {Zone name: $MSDP_AREA_NAME:\n\tInfo coming about zone};
};




#action {%1 $MSDP_AREA_NAME %2 - %3 %4% %5%} {#regexp {%1} {%d} {#var area[id] &0};#regexp {%4} {%d.%d} {#var area[room] &0};#regexp {%5} {%d.%d} {#var area[mobs] &0}};

#alias {showarea} {area completed $MSDP_AREA_NAME;} 

#action {Total: %1 areas displayed.} {display_area_info}

#alias display_area_info {
	#show >>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<;
	#show >>> Zone Info: $MSDP_AREA_NAME   ($MSDP_ROOM_VNUM) <<<;
	#show >>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<;	
	#show >>> Completed mobs:$area[room]% rooms:$area[room]%  <<<;
	#show >>> Paths:											<<<;	
	#show >>> Shops:											<<<;	
	#show >>> Notes:											<<<;	
	#show >>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<;	
}



#NOP #######################################################
#NOP Room specific events
#NOP #######################################################

#alias room_event {
	#SWITCH {$MSDP_ROOM_VNUM} {
		#CASE {3001} {#show <141>END ZONE;#if $zone[active] {#var zone[active] 0}};
		#CASE {3074} {#show <141>END ZONE;#if $zone[active] {#var zone[active] 0}};
		#CASE {Bandit} {#show <141>Bandit maze: neswnwse};
		#CASE {ChaosPortal} {#show <141>Exit portal: unwd};
		#CASE {ChaosGate} {#show <141>Enter grate: wnwnwe};
		#CASE {13340} {#show <141>Grelic Maze: ws2nesweswn2s};
		#DEFAULT {#nop};
	};	

}

#NOP #######################################################
#NOP Handle set/clear targets
#NOP #######################################################

#action {Nobody here by that name ('%1').} {#if {"$bot[role]"!="leader"} {:cant see %1};cleartarget}
#action {Nobody here by the name of '%1'.} {#if {"$bot[role]"!="leader"} {:cant see %1};cleartarget}
#action {No target found by the name of '%1'.}  {#if {"$bot[role]"!="leader"} {:cant see %1};cleartarget}

#action {%1 cant see @findtarget{}} {cleartarget}

#action {You can't do that here.} {cleartarget;#if {"$MSDP_AREA_NAME"=="The Island of Na'Kana"} {#path w}}

#action {You aren't in the same group as the person currently fighting %1.} {cleartarget}


#function findtarget {
	#if {&{targetlist[]}>0} {
		#if {"$targetlist[1][1]"!=""} {#return $targetlist[1][1]};
		#if {"$targetlist[2][1]"!=""} {#return $targetlist[2][1]};
		#if {"$targetlist[3][1]"!=""} {#return $targetlist[3][1]}
	};
	#else #return {}
}

#alias cleartarget {
	#var targetlist {};
	#var target {};
	#var has_poked 0;
	l;
	#list {_queue[combat]} clear;
	queue_block;
}

#NOP Params    <maxMobs> <HowManyAreThere> <MobName> <MinLevel> <MaxLevel> <Priority1-3>
#alias {settarget %1 %2 %3 %4 %5 %6} {
	#if { ($MSDP_GROUPLEVEL>=%4 && $MSDP_GROUPLEVEL<=%5) } {
		#if {%2>%1} { #nop are there more mobs left %2 than allowed to fight %1;
			gt $communication[left] TARGET IGNORE: %2 present, will max fight %1 $communication[right];
		};
		#else {
			#list targetlist[%6] add %3;
			#switch {"$bot[role]"} {
				#case {"leader"} {#show <131>TARGET aquired: %3 (prio:%6);};
				#default {#show <F333><B595>TARGET aquired: %3 (prio:%6);};
			}
		}
	}
}

#function mob_count {
	#var result 1;
	#regexp {%1} { [%d]} {#var result &1} {#var result 1};
	#return $result;
}


#var room_count 0
#alias count_mobs_in_room {
	#math room_count {$room_count+%1};
}


#NOP #######################################################
#NOP Combat
#NOP #######################################################

#alias damage {#if {"%1"!=""} {#var bot[damage] %1} {#var bot[damage] {}};generate_bot_info;#show <131>New damage ability: [%1]}
#alias healing {#if {"%1"!=""} {#var bot[healing] %1} {#var bot[healing] {}};generate_bot_info;#show <131>New healing ability: [%1]}

#alias poke_target {
	#if {$has_poked==0 && "@findtarget{}"!=""} {
		#var has_poked 1;
		#delay {repoke} {#show WE CAN POKE AGAIN;#var has_poked 0} {4} ;
		: $bot[markcommand]: @findtarget{};
		$bot[pokecommand] @findtarget{}
	}
}

#action {%0 $bot[markcommand]: %1} {
	#switch {"$bot[role]"} {
		#case {"tank"} {
			#show <121>>INITIATE COMBAT - role:tank;$bot[damage] %1;
		};
		#case {"stabber"} {
			#show <121>>INITIATE COMBAT - role:stabber;#delay botstab {queueAdd any {$bot[damage] %1}} {$delay[stabber]} 
		};
	};
}

#action {%0 $bot[pokecommand] %1} {
	#switch {"$bot[role]"} {
		#case {"leader"} {
			#if { $bot[join] } {
				#show <121>>DELAYED START - role:leader;#delay initiatecombat {queueAdd any {$bot[damage] %1}} {2};
			}
		};
		#case {"healer"} {
			#if { $bot[join] } {
				#show <121>>NOT CASTING IN COMBAT - role:healer;#delay initiatecombat {queueAdd any {kill %1}} {2};
			}
		};
		#case {"tank"} {
			#nop show <121>>INITIATE COMBAT - role:tank;#nop queueAdd any {$bot[damage] %1};
		};
		#case {"damage"} {
			#show <121>>DELAYED START - role:damage;#delay initiatecombat {queueAdd any {$bot[damage] %1}} {2};
		};
	}
}

#action {You join the fight with %1.} {
	#if { ("$bot[role]"=="leader") || ("$bot[role]"=="damage") || ("$bot[role]"=="stabber") } {
		queueAdd combat $bot[damage];
	};
	#if { "$bot[role]"=="tank" } {
		#if $bot[rescue] {breakout;queueAdd priority rescue %1};
	}	
}

#action {SEEK SHELTER AT ONCE!  %1 has begun to sing.} {
	#if { ("$bot[role]"=="tank") && ("$MSDP_POSITION"!="Fighting") } {
		#if $bot[rescue] {breakout;queueAdd priority rescue %1};
	}
}

#action {%1 places something in the back of} {
	#if { ("$bot[role]"=="tank") && ("$MSDP_POSITION"!="Fighting") } {
		#if $bot[rescue] {queueAdd priority rescue %1};
	}
}

#action {%1 tries to backstab} {
	#if { ("$bot[role]"=="tank") && ("$MSDP_POSITION"!="Fighting") } {
		#if $bot[rescue] {queueAdd priority rescue %1};
	}
}

#action {%0[%1h %2s    ] %3 vs %4 [ %5h %6s ]} {#if $bot[rescue] {queueAdd priority rescue %4}}
#action {You try but are unable to head off %1 opponent.} {#if $bot[rescue] {breakout;queueAdd priority !rescue}}

#action {You're already fighting - help yourself first!} {
	#if { ("$bot[role]"=="leader") || ("$bot[role]"=="damage") || ("$bot[role]"=="stabber") } {
		queueAdd combat $bot[damage];
	}
}

#action {You can't do that in this peaceful place.} {
	#if { ("$bot[role]"=="tank") && ("$MSDP_POSITION"!="Fighting") } {
		: find it too peaceful here;
	}
}

#action {%0 find it too peaceful here} {
	#if { ($zone[active]) && ("$bot[role]"=="leader")} {
		#path w;
		cleartarget;
	}
}

#action {You wimp out and attempt to flee!} {
	#if $zone[active] {zone_end};
	perform_recall;
}

#action {You flee head over heels.} {
	#if $zone[active] {zone_end};
	perform_recall;
}

#action {You can't concentrate on anything but killing!} {
	perform_recall;
}

#action {%1 issues a rally call to join the group at The Temple Of Midgaard.} {
	perform_recall;
}

#alias recall {perform_recall}
#alias rr {perform_recall}

#alias perform_recall {
	show_debug {TRYING TO RECALL - Position: $MSDP_POSITION};
	#if {"$MSDP_POSITION"=="Fighting" } {
		breakout;
		rec reca;
	}; #else {
		#if {"$MSDP_ACCOUNT_NAME"=="Valhalla"} {rec reca} {recal;}
	}
}

#action {You recite a scroll of recall which dissolves.} {
	get recall all;
}


#action {There doesn't seem to be a recall in %1.} {#if $stock[recall] {home;with 27010;recall;2s2wn;#10 buy recall;put all.recall $container};recall};
#action {There doesn't seem to be a purple in %1.} {#if $stock[purple] {recall;2s3wn;#10 buy purple;put all.purple $container};recall};

#action {%1 makes an impressive fighting move.} {get $weapon_pri;wield $weapon_pri}
#action {{A|An|The} %1 flies from your grasp.} {get $weapon_pri;wield $weapon_pri}


#NOP Necro/Demoniac specific
#var auto[candrain] 1
#action {%1 does not have enough energy left to drain.} {#var auto[candrain] 0}
#action {You can only drain the living.} {#var auto[candrain] 0;queueAdd priority $bot[damage] @findtarget{}}


#action {%1 looks really sick, and shivers uncomfortably.} {#if { ("$MSDP_CLASS" == "Druid") || ("$MSDP_CLASS" == "Prophet")} {nco cure %1}}
#action {You can't see a darn thing -- you're blind!} {#if { ("$MSDP_CLASS" == "Druid") || ("$MSDP_CLASS" == "Prophet")} {queueAdd priority cure}}
#action {Your sight has returned.} {get all.gold all.corpse}


#NOP Druid/Prophet specific
#action {You call upon the forces of nature to heal yourself.} {#delay clearconvert {#list {_queue[any]} delete 1;#list {_queue[combat]} clear} {10};queueAdd heal heal $MSDP_CHARACTER_NAME}
#action {You get seasick as your ship tosses about in the rough weather.} {#if { ("$MSDP_CLASS" == "Druid") || ("$MSDP_CLASS" == "Prophet")} {cast 'control weather' better}}
#action {You heave as your ship tosses about madly in the torrential rain and lightning.} {#if { ("$MSDP_CLASS" == "Druid") || ("$MSDP_CLASS" == "Prophet")} {cast 'control weather' better}}
#action {You sail along happily.} {#if { ("$MSDP_CLASS" == "Druid") || ("$MSDP_CLASS" == "Prophet")} {cast 'control weather' better}}
#action {The sky darkens.} {nco controlweather worse}
#HIGHLIGHT {The sky darkens.} {red};
#HIGHLIGHT {Nothing seems to happen.  The weather is as bad as it can get!} {red};


#NOP #######################################################
#NOP General
#NOP #######################################################
#action {You hop on {a|an|the} %1's back.} {#var bot[mount][name] %1}

#action {The gust of wind knocks you to the ground.} {stand;#if { "$bot[mount][name]" !="" } {ride $bot[mount][name]}}
#action {You try to ride %1, but you fall on your butt.} {stand;#if { "$bot[mount][name]" !="" } {ride $bot[mount][name]}}
#action {You lose control and fall off of %1.} {stand;#if { "$bot[mount][name]" !="" } {ride $bot[mount][name]}}



#action {You grunt in frustration trying to chop up the vines entangling %1.} {chop %1}

#action {You had better stand up first.} {stand;ride $bot[mount][name]}
#action {picks you up by the neck} {stand;ride $bot[mount][name]}

#action {You are too high level to attack %1 right now (%2 was recently attacked by someone much lower than you).  Wait a few minutes and try again.} {cleartarget;smart_move}

#function gotFollowers {
	#var followers 0;
	#loop {1} {&MSDP_GROUP[]} {index} {
		#if {"$MSDP_GROUP[$index][npc]" == "NPC" || "$MSDP_GROUP[$index][npc]" == "npc"} {
			#math followers {$followers+1}
		}
	};
	#return $followers;
}

#alias ftank {	reform follow%1 prima; }

#ACTION {%0 is dead!  R.I.P.} {
	show_debug {<123>%0 is dead, what to do!!};
	cleartarget;
	#var lastkilltime $MSDP_UPTIME;
	#if { "$MSDP_CLASS"=="Necromancer"} {
		#var auto[candrain] 1;
		#if { "$bot[role]"=="leader" && @gotFollowers{}<2 && $bot[poke]==0 } {
			queueAdd priority animate corpse;
		}; #else {
			#if { (@pct{$MSDP_MANA;$MSDP_MANA_MAX}<80) || (@pct{$MSDP_HEALTH;$MSDP_HEALTH_MAX}<80) } {
				queueAdd priority $bot[spellCorpse] corpse;
			};	
		}
	};
	#if {$profession[gather][auto]} { do_gather %0 };
	#if {@gotFollowers{}>0} { get gold all.corpse };
	#if {"$bot[hide]"!==""} { $bot[hide] };
	#if { $bot[examine] } { exa corpse };
}

#ACTION {The %1 {above|below|to the .*} seems to be closed.}
{
	#local {i} {%2};
	#replace {i} {above} {up};
	#replace {i} {below} {down};
	#replace {i} {to the } {};
	#nop {Hook name: closed.};
	#nop {Hook args: %1 name of door %2 direction.};
	#line substitute variables #regexp {%1} {{.*} {.*}} {open &2 $i} {open %1 $i};
	#if { "$toggle[hunt]"=="on" } { look	};
}

#ACTION {The %1 {above|below|to the .*} seems to be locked.}
{
	#local {i} {%2};
	#replace {i} {above} {up};
	#replace {i} {below} {down};
	#replace {i} {to the } {};
	#nop {Hook name: closed.};
	#nop {Hook args: %1 name of door %2 direction.};
	#line substitute variables #regexp {%1} {{.*} {.*}} {unlock &2 $i} {unlock %1 $i};
	#if { "$toggle[hunt]"=="on" } { look };
}

#action {The mystic's treasure lies here. (invis)} {get all}
#action {A %1 of gold coins is lying here.} {get gold}

#alias id {cast 'identify'}

#ALIAS {^%ddo %2 %S$} { #loop {1} {%1} {i} {%2 $i.%3}}


#ALIAS {sroom} {
	#gag { ! };
	#gag {+! };
	#gag {\~! };
	find_containers_in_room;
	#delay 2 {
		#foreach {*containers_room[]} {i} {searc $containers_room[$i] %1;}
	};
	#delay 20 {
		#ungag { ! };
		#ungag {+! };
		#ungag {\~! };
		#var containers_room {}
	}
}
#alias find_containers_in_room {
	#var containers_room {};
	#gag {(locked)};
	#action {%%1 {armoury|safe|case|trunk|chest|drawer|jar|basket} %%3} {
		#list containers_room add %%2
	};
	l;
	#delay 0.4 {
		show_debug UNACTION;
		#unaction {%%1 {armoury|safe|case|trunk|chest|drawer|jar|basket} %%3}
	}
}


#alias scon {
	#if {%2>0} {
		objs count;
		#var auto[id] 1;
		#var cur_container %1;
		#var max_id %2;
		#var item_left_id %2;
		#show <131>Will id all items in $cur_container, counting down from $max_id;
		get_item
	} {
		#show <131>scon needs params <container> <maxid>
	}
}
#alias sco {
	objs count;
	#var auto[id] 1;
	#var max_id %1;
	#var item_left_id %1;
	#show <131>Will id all items in $cur_container, counting down from $max_id;
	get_item
}
#alias search {
	#var cur_container %1;
	searc %1
}
#alias get_item {
	#if {$item_left_id<$max_id} {
		savecsv;
		sql_save_item;
	};
	#if {$item_left_id>0} {
		get $max_id $cur_container
	} {
		#var auto[id] 0;
		l;
		#show <131>Done id'ing $max_id items in $cur_container
	}
}
#action {There doesn't seem to be a $max_id in} {
	#if {$auto[id]} {
		#math max_id {$max_id-1};
		#var item_left_id $max_id;
		get_item
	}
}
#action {You get {a |an |the |}%2 from {a |an |the |}%3.} {
	#if {$auto[id]} {
		#math item_left_id {$item_left_id-1};
		#show <131>[$item_left_id/$max_id] Found: [%2];
		lore 1
	}
}
#action {You think back to stories from your childhood and legends of old...} {
	#if {$auto[id]} {
		#delay 0.2 {
			put 1 $cur_container;
			get_item
		}
	}
}
#action {You couldn't figure it out.} {
	#if {$auto[id]} {
		lore 1
	}
}
#var auto[id] 0;
#var cur_container {};
#var item_left_id {};
#var max_id {};


#function return_min_sec {
	#math temp[sec] { %1 % 60 };
	#math temp[min] { %1 / 60 };
	#if {$temp[min] > 59} {
		#math temp[hour] { $temp[min] / 60 };
		#math temp[min] { $temp[min] % 60 };
		#return $temp[hour]h$temp[min]m$temp[sec]s;
		break;
	}; #else {
		#return $temp[min]m$temp[sec]s;
	}
}

	#FUNCTION pretty_number {
		#math temp[mil] { %1 / 1000000 };
		#if { ($temp[mil]) >= 1} {
			#return $temp[mil]mil;
		}; #else {
			#return %1;
		}
	};


#NOP ############### SPEED PATH WALK

#ALIAS {^goto %slist$}
{
    #local {i} {};
    #foreach {*{goto[]}} {i}
    {
        #echo {<170>$i - <130>${goto[$i]}}
    }
}
{8}


#ALIAS {^goto %1} {
	#if {{$MSDP_ROOM_NAME} == {The Temple Of Midgaard}}	{
		#if {&{goto[%1]}}
		{
			#path unzip ${goto[%1]};
			#ticker 
			{startwalking} 
			{
				show_debug {TARGET: @findtarget{}  GroupFight: @is_group_fighting{}  GroupPresent: @groupIsPresent{}};
				#if { ("@findtarget{}"=="") && (@is_group_fighting{}==0)} {
					#if { @groupIsPresent{} } {
						smart_move;
						#path get position temp_pos;
						#path get length temp_len;
						#show GOTO PATH: $temp_pos of $temp_len;
						#if { $temp_pos == ($temp_len+1) } { stopwalking }
					};#else  {
						#show whole group is not here;
						#unticker {startwalking};
						rally;
					}
				};#else {
					kill @findtarget{}
				}
			} 
			{0.6};
		};
		#else {
			#echo {<170>No location "%1" found. Use "goto list" for a list of locations.}
		}
	};
	#else	{
		#echo {<170>Please invoke goto from the Midgaard temple.}
	}
}
{9}

#alias stopwalking {
	#untick startwalking;
	#show <130><<< Welcome to: $MSDP_AREA_NAME >>>;
}


#VARIABLE {goto}
{
    {boar} {8s1w2s1e21s1w1n2w1n1w1n3w2n1w4s1e2s}
    {atoll} {8s1w2s1e29s9w3s1w1s1w1s1w1d1s1e1s4e;enter portal}
	{cult} {2s11w7n9w19n}
    {nedragaard} {2s7e24n1w2n9w1s4w1s2w1n1e3s1w1s1w1s1e1s2w2s1w1n1w1n}
	{godspike} {8s1w2s1e7s19w2s2w4n4w1s}
	{ravenloft} {2s7e24n1w2n9w1s4w1s2w1n1e3s1w1s1e1n4w}
	{naka} {2s14e14n1e3n5e1d4e1s4e2n4e1u}
	{meta} {2s14w;enter tree;open door;1w}
	{thalos} {2s21e6s2e3s1w}
	{skarpsky} {8s1w2s1e14s2w2n2w1n3w2s1w1s}
	{baal} {2s14w6s6w1n}
	{mon} {2s4e6s2w;open gate;1s1w;open door;1w1d1w;open door s;1s;open door s;1s;enter portal;1u5n1s1d}
	{saltmarsh} {2s7e6s3e3s1e1s1e1s1e2s1e1n}
	{eros} {1n1e3n1w1d3s3e1s}
}



#NOP ############### HUNT
#ac {You start searching for tracks but then realize %1 is right here!} {#show <131> Found target %1!}
#ac {^[* You see your target's tracks leading %1. *]} {#if {"$toggle[hunt]"=="on"} {smart_move %1}}
#ac {[* You found %1! *]} {gt $communication[left] Found target: %1 $communication[right]}



#NOP #######################################################
#NOP Area specific information - route + mobs 
#NOP #######################################################

#action {Though short, you realize that this small kender has a certain quickness.} {settarget 999 @mob_count{"%1"} kender 1 100 1}


#NOP ROUTE NA'KANA
#alias gonaka {2s14e14ne3n5ed4es4e2n4eu;zone_automatic_restart}

#ac {A puffin bobs up and down in the rolling waves.%1} {settarget 999 @mob_count{"%1"} puffin 20 100 3}
#ac {A giant petrel guards its nest here.%1} {settarget 999 @mob_count{"%1"} petrel 20 100 3}
#ac {A common murre is hovering here.%1} {settarget 999 @mob_count{"%1"} murre 20 100 3}
#ac {A northern gannet is hovering here.%1} {settarget 999 @mob_count{"%1"} gannet 20 100 3}
#ac {A skua is hovering here.%1} {settarget 999 @mob_count{"%1"} skua 20 100 3}
#ac {A sooty tern sits on its nest and eyes you warily.%1} {settarget 999 @mob_count{"%1"} tern 20 100 3}
#NOP 35+
#ac {A weka cranes its neck to look at you.%1} {settarget 999 @mob_count{"%1"} weka 49 100 3}
#ac {A kakapo is hovering here.%1} {settarget 999 @mob_count{"%1"} kakapo 45 100 3}
#ac {A takahe nibbles on a bit of chionochloa grass.%1} {settarget 999 @mob_count{"%1"} takahe 49 100 3}
#ac {A giant moa peeks shyly through the vegetation.%1} {settarget 999 @mob_count{"%1"} moa 51 100 2}
#ac {A spectacled cormorant is hovering here.%1} {settarget 999 @mob_count{"%1"} cormorant 52 100 2}
#ac {A royal albatross is hovering here.%1} {settarget 999 @mob_count{"%1"} royal 53 100 2}
#ac {A pelegornis, lord of the birds, sits here.%1} {settarget 999 @mob_count{"%1"} pelegornis 54 100 1}



#NOP ################## ROUTE BOT BA'ALOR;	
#alias gobaalor {2s11w6s6wn}
#action {You enter the rock.} {#if {"@group_leader"=="$MSDP_CHARACTER_NAME"} {	gt all enter rock}}
#action {You enter a massive tree.} {#if {"@group_leader"=="$MSDP_CHARACTER_NAME"} {	gt all enter tree}}
#action {You enter the steps.} {#if {"@group_leader"=="$MSDP_CHARACTER_NAME"} {	gt all enter tree}}


#action {Ba'Alor asks, 'Welcome to Baramon Ingrol travelers, are you friend or foe?'} {settarget 999 @mob_count{"%1"} Ba 1 63 1}
#action {Ba'Alor stands here, stirring his stew.} {settarget 999 @mob_count{"%1"} Ba 1 63 1}
#action {A koala bear is here with his friends, safe from the fires.%1} {settarget 999 @mob_count{"%1"} koala 30 63 1}
#action {A forest squirrel skitters around.%1} {settarget 999 @mob_count{"%1"} squirrel 20 63 1}
#action {A fearless bear wanders around, scraping for food.%1} {settarget 999 @mob_count{"%1"} bear 20 63 1}
#action {A chubby troll roams around here.%1} {settarget 999 @mob_count{"%1"} troll 30 63 1}
#action {A fledgling fire drake plays here, attracted by the fire.} {settarget 999 @mob_count{"%1"} drake 38 61 1}
#action {A fledgling fire dragon plays here, attracted by the fire.} {settarget 999 @mob_count{"%1"} drake 38 61 1}


#ACTION {a fire elemental is hovering here.%1} {settarget 2 @mob_count{"%1"} elemental 30 63 1}
#ACTION {A halfling is here, trying to burrow into the dirt.%1} {settarget 2 @mob_count{"%1"} halfling 30 63 1}
#ACTION {A tunnel hermit scavenges for food.%1} {settarget 1 @mob_count{"%1"} hermit 30 63 1}

#action {A tunnel protector is here, serving the forces that be.} {settarget 2 @mob_count{"%1"} protector 30 61 3}
#action {An ice elemental floats here, chilling the surrounding air.} {settarget 2 @mob_count{"%1"} elemental 30 61 2}
#action {A shimmering tower of diamond glitters before you.} {settarget 2 @mob_count{"%1"} diamond 30 61 1}
#action {A cave monster is here, protecting his useless belongings.} {settarget 999 @mob_count{"%1"} monster 30 61 1}

#action {A strange boulderman stands here.} {settarget 999 @mob_count{"%1"} boulderman 30 61 1}

#action {A dangerous looking skeleton warrior screams for blood!} {settarget 999 @mob_count{"%1"} skeleton 30 61 2}
#action {A disgusting zombie shambles by, hungering for mana.} {settarget 999 @mob_count{"%1"} zombie 30 61 1;$bot[damage] zombie}
#action {A guardian of the four looms over you.} {settarget 999 @mob_count{"%1"} guardian 30 61 3}


#action {Sabrael is hovering here.} {settarget 999 @mob_count{"%1"} Sabrael 30 61 1}
#action {Melkyal of The Four is here, staring at you.} {settarget 999 @mob_count{"%1"} Melkyal 30 61 1}
#action {Barbelo of The Four is here, glaring at you.} {settarget 999 @mob_count{"%1"} Barbelo 30 61 1}
#action {Empyrean is here hiding in the shadows. } {settarget Empyrean 999 @mob_count{"%1"} 30 61 1;$bot[damage] Empyrean}



#action {You need to ADVANCE to reach a fire elemental with close ranged attacks.} {queueAdd combat {$bot[damage] fire}}

#NOP ################ ARCHIPELAGO


#action {A scorpion stands here bathing in the warm sun.%1} {settarget 999 @mob_count{"%1"} scorpion 50 100 1}
#action {A sun scorpion is here looking alert.%1} {settarget 999 @mob_count{"%1"} scorpion 50 100 1}
#action {A stout dinosaur bathes his shell in the hot sunlight.%1} {settarget 999 @mob_count{"%1"} dinosaur 50 100 1}
#action {A rugged looking mage wanders about.%1} {settarget 999 @mob_count{"%1"} mage 50 100 1}
#action {A proud looking monk walks solemnly past.%1} {settarget 999 @mob_count{"%1"} Darecha 50 100 1}

#action {An almost metallic wyvern hovers close above.%1} {settarget 999 @mob_count{"%1"} wyvern 50 100 1}
#action {A demon made of metal shards stands here.%1} {settarget 999 @mob_count{"%1"} demon 50 100 1}

#action {A rather large snake lies nearby.%1} {settarget 999 @mob_count{"%1"} python 50 100 1}
#action {A python is here looking alert.%1} {settarget 999 @mob_count{"%1"} python 50 100 1}
#action {A man with the head of a lizard stands here.%1} {settarget 999 @mob_count{"%1"} lizardman 50 100 1}
#action {A lizardman is here looking alert.%1} {settarget 999 @mob_count{"%1"} lizardman 50 100 1}

#action {A volcanic dragon is hovering here.%1} {settarget 999 @mob_count{"%1"} dragon 50 100 1}
#action {A huge red feathered bird looms above.%1} {settarget 999 @mob_count{"%1"} roc 50 100 2}

#action {A quake demon is hovering here.%1} {settarget 999 @mob_count{"%1"} demon 50 100 1}
#action {A howling dusty wind blows wildly here.%1} {settarget 999 @mob_count{"%1"} dust 50 100 2}
#action {A slender man attempts to hide in the shadows.%1} {settarget 999 @mob_count{"%1"} Sabado 50 100 1}


#action {A proud looking monk walks solemnly past.%1} {settarget 999 @mob_count{"%1"} Wrechlu 50 100 3}
#action {A great paladin scours the land purging evil.%1} {settarget 999 @mob_count{"%1"} Miercoles 50 100 1}


#action {A stealthy warrior looks to bring back a prize trophy.%1} {settarget 999 @mob_count{"%1"} Jueves  50 100 1}
#action {A man sloshes through the marsh eyeing you closely.%1} {settarget 999 @mob_count{"%1"} Lunes 50 100 3}


#action {XXXXX%1} {settarget 999 @mob_count{"%1"} XXXXX 50 100 1}
#action {XXXXX%1} {settarget 999 @mob_count{"%1"} XXXXX 50 100 1}
#action {XXXXX%1} {settarget 999 @mob_count{"%1"} XXXXX 50 100 1}
#action {XXXXX%1} {settarget 999 @mob_count{"%1"} XXXXX 50 100 1}



#NOP ################ PILLAR MAZE
#alias gopillar {4n2w4swn}

#ac {The maze guard keeps undesirables from entering.} {settarget 999 @mob_count{"%1"} maze 30 100 1}
#ac {The maze keeper is cleaning up the place.} {settarget 999 @mob_count{"%1"} maze 30 100 1}
#ac {The guardian of the maze is here watching over your progress.} {settarget 999 @mob_count{"%1"} guardian 30 100 1}
#ac {The maze seer stands here seeing all.} {settarget 999 @mob_count{"%1"} seer 30 100 2}


#NOP {The MIST};
#ac {The mists form into the shape of a massive beast, blocking your way.} {settarget 999 @mob_count{"%1"} mist 30 100 1}



#NOP ################ LAND OF THE CULT
#ac {Hewlitt Twang stands here obviously upset with your intrusion.} {settarget 999 @mob_count{"%1"} Twang 30 100 1}
#ac {Nevarg Lewon stands here with a smile on his face.} {settarget 999 @mob_count{"%1"} Lewon 30 100 1}
#ac {Seaman the friendly weasel is here.} {settarget 999 @mob_count{"%1"} Seaman 30 100 1}
#ac {Enmar is hovering here.} {settarget 999 @mob_count{"%1"} Enmar 30 100 2}
#ac {You sense an undead creature in the room.} {settarget 999 @mob_count{"%1"} cult 30 100 1}
#ac {Lana, the Mayor's daughter, crouches in a corner.} {settarget 999 @mob_count{"%1"} Lana 30 100 1}
#ac {Eleka Clay is here} {settarget 999 @mob_count{"%1"} Clay 60 100 1}
#ac {Nala Clay is here} {settarget 999 @mob_count{"%1"} Nala 60 100 1}
#ac {XXXXXXXXXXXXXXXXXXXX} {settarget 999 @mob_count{"%1"} XXXXX 30 100 1}
#ac {XXXXXXXXXXXXXXXXXXXX} {settarget 999 @mob_count{"%1"} XXXXX 30 100 1}
#ac {XXXXXXXXXXXXXXXXXXXX} {settarget 999 @mob_count{"%1"} XXXXX 30 100 1}
#ac {XXXXXXXXXXXXXXXXXXXX} {settarget 999 @mob_count{"%1"} XXXXX 30 100 1}
#ac {XXXXXXXXXXXXXXXXXXXX} {settarget 999 @mob_count{"%1"} XXXXX 30 100 1}



#NOP ################ THALOS
#alias gothalos {2s21e6s2e3sw}

#ac {A large black lamia stands here, guarding the entrance to her sisters.} {settarget 999 @mob_count{"%1"} lamia 40 60 1}
#ac {The stone golem is hovering here.} {settarget 999 @mob_count{"%1"} golem 40 60 2}
#ac {Two skeletons lie crushed under a large boulder.} {settarget 999 @mob_count{"%1"} mimic 40 60 3}
#ac {A strong chest lies in one corner of the room.} {settarget 999 @mob_count{"%1"} mimic 40 60 3}
#ac {The stone floor of this house has been ripped apart.} {settarget 999 @mob_count{"%1"} mimic 40 60 3}
#ac {A few wooden planks lie stacked on a low shelf.} {settarget 999 @mob_count{"%1"} mimic 40 60 3}
#ac {Some broken shards of pottery lie strewn about the floor.} {settarget 999 @mob_count{"%1"} mimic 40 60 3}
#ac {A lamia stands here, searching for her next meal.} {settarget 999 @mob_count{"%1"} lamia 40 60 1}


#NOP ################ Thri-Kreen
#alias gothri {2s21e6s3e4s}
#ac {A brown colored thri-kreen moves about here, surveying the area.} {settarget 999 @mob_count{"%1"} thri 40 75 1}
#ac {An experienced looking thri-kreen strides about.}  {settarget 999 @mob_count{"%1"} thri 40 75 1}
#ac {A thri-kreen is here, looking for danger.} {settarget 999 @mob_count{"%1"} thri 40 75 1}
#ac {A well camouflaged thri-kreen lurks near some cover.} {settarget 999 @mob_count{"%1"} thri 40 75 1}

#nop var zone[proflist] {{"The thri-kreen scout"};{"The thri-kreen hunter"};{"The experienced looking thri-kreen"};{"The thri-kreen guard"};{"XXXXX"};{"XXXXXXX"};{"XXXXXXX"}};

#alias badweather {#delay badweather {#if { ("$MSDP_CLASS"=="Druid") || ("$MSDP_CLASS"=="Prophet") } {nco controlweather worse}} {5}}