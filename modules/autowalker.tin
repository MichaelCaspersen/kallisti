#nop Starts following you - Please TURN OFF all targetted attacks.
#nop Do stats announcements
#nop log good/bad kills 
#nop log time of kill, times since last kill, averages , kills per zone (wen)

#var autowalk 1;

#var walker[room][positive] 0;
#var walker[room][negative] 0;
#var walker[room][mobs] 0;
#var walker[room][target] {};

#var walker[delay][step] 0.3;
#var walker[delay][waypoint] 0.3;
#var walker[delay][zone] 5;
#var walker[delay][action] 4;
#var walker[delay][kill] 0.1;
#var walker[delay][downtime] 60;

#var walker[action][kill] 1; #nop Will initiate kill, ask for rescue
#var walker[action][poke] 1; #nop Will initiate kill, ask for rescue

#var walker[mode] normal; #nop Will initiate kill, ask for rescue
#var walker[destination] {};

#var walker[zone][index] 0;
#var walker[zone][destination] 0;
#var walker[zone][active] {};
#var walker[zone][zones] {north,west,east};
#list walker[zone][zones] explode {,};

#var walker[zone][north][safe] {34509,34531,34556,34529,34502,34527,34551,34526,34501,34528,34553,34530,34508,34532,34506,34554,34503,34552,34505,34557,34558,34533,34507,34555,34504,34529,34556,34531,34509};
#var walker[zone][west][safe] {34543,34569,34518,34568,34542,34570,34520,34572,34549,34574,34525,34575,34550,34573,34548,34524,34547,34521,34546,34522,34523,34571,34545,34519,34544,34568,34518,34569,34543};
#var walker[zone][east][safe] {34566,34516,34541,34517,34567,34515,34539,34513,34560,34511,34534,34510,34559,34512,34561,34535,34562,34538,34563,34537,34536,34514,34564,34540,34565,34517,34541,34516,34566};
#list walker[zone][north][safe] explode {,};
#list walker[zone][west][safe] explode {,};
#list walker[zone][east][safe] explode {,};

#var tell_mobs[east][normal][Forest] {"snap", "scarab", "wolf"};
#var tell_mobs[east][normal][Desert] {"topiary", "snap", "wolf"};
#var tell_mobs[east][normal][Tundra] {"scarab", "topiary"};
#var tell_mobs[east][clear][Forest] {"tree", "topiary"};
#var tell_mobs[east][clear][Desert] {"scarab"};
#var tell_mobs[east][clear][Tundra] {"wolf", "snap"};

#var tell_mobs[west][normal][Forest] {"snap", "topiary", "wolf"};
#var tell_mobs[west][normal][Desert] {"scarab", "topiary"};
#var tell_mobs[west][normal][Tundra] {"scarab", "snap", "wolf"};
#var tell_mobs[west][clear][Forest] {"scarab"};
#var tell_mobs[west][clear][Desert] {"wolf", "snap"};
#var tell_mobs[west][clear][Tundra] {"tree", "topiary"};

#var tell_mobs[north][normal][Forest] {"scarab", "topiary"};
#var tell_mobs[north][normal][Desert] {"snap", "scarab", "wolf"};
#var tell_mobs[north][normal][Tundra] {"topiary", "snap", "wolf"};
#var tell_mobs[north][clear][Forest] {"wolf", "snap"};
#var tell_mobs[north][clear][Desert] {"tree", "topiary"};
#var tell_mobs[north][clear][Tundra] {"scarab"};

#var tellu_stats[average_kill_time] 0;
#var tellu_stats[revive] 0;
#var tellu_stats[fury] 0;
#var tellu_stats[prudent] 0;
#var tellu_stats[scarab-kin] 0;
#var tellu_stats[topiary] 0;
#var tellu_stats[tundra-snap] 0;

#alias start_walker {
    next_zone;
}

#alias room_reset {
    #var walker[room][mobs] 0;
    #var walker[room][positive] 0;
    #var walker[room][negative] 0;
    #var walker[target] {};
    #nop if { ("$MSDP_POSITION"!="Fighting") && ($cur_opponents==0)} { room_event };
}

#alias next_zone {
    room_reset;
    #math walker[zone][index] {$walker[zone][index]+1};
    #if {$walker[zone][index] > &walker[zone][zones][]} {
        #var walker[zone][index] 1;
    };
    #var walker[zone][active] $walker[zone][zones][$walker[zone][index]];
    #var walker[zone][north][waypoints] {34502,34501,34508,34532,34503,34552,34558,34533,34504,34529,34595};
    #var walker[zone][west][waypoints] {34542,34549,34550,34573,34547,34521,34523,34571,34544,34568,34595};
    #var walker[zone][east][waypoints] {34567,34560,34559,34512,34562,34538,34536,34514,34565,34517,34595};
    #list walker[zone][$walker[zone][active]][waypoints] explode {,};
    #show <131>NEXT ZONE CALLED: [$walker[zone][index]:&walker[zone][zones][]] $walker[zone][active];
    get_destination;
}


#alias get_destination {
	#list walker[zone][$walker[zone][active]][waypoints] get 1 destination;
	#show <131>FIRST DESTINATION FOUND  Zone: $walker[zone][active]   Destination; $destination;
    evalutate_next_step
}


#alias get_next_destination {
	#list walker[zone][$walker[zone][active]][waypoints] delete 1;
    #local _steps_left &walker[zone][$walker[zone][active]][waypoints][];

	#show <142>Current stop removed, steps left: $_steps_left;
	#if { $_steps_left>0 } {
		#show  <142>Journey to next destination starting in $walker[delay][waypoint] secs;
		#delay $walker[delay][waypoint] { get_destination }
	};#else {
		#show <132>No more destinations, load next zone: $tellu_zone starting in $walker[delay][zone] seconds;
		#var destination {};
        decidedamage;
        updategroupname;
        #if {&need_summons[]>0} {
            nco tellu_summon;
            #delay $walker[delay][zone] next_zone;
        }; #else {
            #delay $walker[delay][zone] next_zone;
        }
	}
}



#alias evalutate_next_step {
    #if {"$MSDP_ROOM_VNUM"=="?"} { #map get roomvnum cur_room_vnum } { #var cur_room_vnum $MSDP_ROOM_VNUM };
    #if {$cur_room_vnum==$destination} {
        #show <131>ROOM EVENT: We have arrived $cur_room_vnum;
        get_next_destination;
    }; #elseif {$destination>0} {
        #show <131>ROOM EVENT: Not at destination CurRoom: $cur_room_vnum Dest: $destination;
        #if { $autowalk }  {
            #delay $walker[delay][step] {#show <146>AUTOWALK called after $autowalkspeed (s);takeStep}
        }
    }; #else {
        show_debug {<131>ROOM EVENT: No destination};
        #nop
    }    
}



#on enter room 
#if {"$MSDP_ROOM_VNUM"=="?"} {
    show_debug {<131>We are in Unknown area, check room action after $autowalkspeed(s) delay};
    #delay $autowalkspeed room_event;
}



#alias evalute_room {
    #show EVALUATE ROOM: $cur_room_vnum  Positive:$botPositive   Negative:$botNegative  MobsInRoom: $tellu_mobs_in_room  PrevPathLength:$path_length  GroupCanMove:@can_group_move{} TimeSinceKill: @tellu_lastkilltime{}};
    #nop NOT SAFE FOR KILL - TAKE STEP TOWARDS DESTINATION
    #if {$botPositive!=1} {
        #map find $destination;
        #path get length path_length;
        #if {$path_length>0} {
            #nop WE HAVE A PATH
            #if { (@can_group_move{}) } {
                room_reset;
                #if { (&_queue[move][]==0) } {
                    smart_move;
                }
            }; #else {
                #if {"$char_entangled"!=""} {
                    #format char_entangled %l $char_entangled;
                    gt all chop $char_entangled
                };
                #var char_entangled {};
            };
        };
    };
    #nop THERE IS TARGET IN ROOM
    #else {
        #if {$botNegative>0 || $tellu_mobs_in_room>1} {
            #show <131>BAD GUYS MOVE ON;
            room_reset;
        }; 
        #else {
            #show <131>THERE ARE ACTIONS WE NEED TO DEAL WITH;
            #if {@verifyTelluZone{}} {
                #if {$tell_start_kill} {
                    #if {$tell_start_kill_delay==0} {
                        kill $tellu_target;
                    };#else {
                        #if {"$bot[damage][single]"!=""} {
                            #delay $tell_start_kill_delay {$bot[damage][single] $tellu_target}
                        };#else {
                            #delay $tell_start_kill_delay {kill $tellu_target}
                        }
                    }
                };
                : marks $tellu_target for death.;
                #var tellu_kill_timer $MSDP_UPTIME;
                #delay 5 {
                    #show \n<135>Test poke! Time Since Kill: @tellu_lastkilltime{}  Postion: $MSDP_POSITION <070>.;
                    #if { (@tellu_lastkilltime{}>6) && ("$MSDP_POSITION"!="Fighting")} {
                        actionCleared
                    }
                };
            }; #else {
                room_reset;
            };
        }
    }
}








 #function verifyTelluZone {
    #var tellu_zone_correct 0;
    #regexp {$tellu_rooms[$tellu_zone]} {$cur_room_vnum} {#var tellu_zone_correct 1};
    #return $tellu_zone_correct
}


#alias tellu_reset {
    #show <143>END ZONE, RETURN TO START;
    #list waypoints[$tellu_zone] clear;
    #var destination 34595;
    room_event;
}

#action {^%1 chops up the vines entangling %2.} {
    #format char_entangled %l $char_entangled;
    #if { ("$char_entangled"!="") && ("%2"=="$char_entangled") } {
        #var char_entangled {}
    };
    #delay {2} {nco actionCleared}
};

#action {^**%1: 'Target not found: [%2].'} {#if {"%2"=="$tellu_target"} {nco actionCleared}} 1

#alias decidedamage {
    #switch {"$MSDP_CLASS"} {
        #case {"Wizard"} { #if {@pct{$MSDP_MANA;$MSDP_MANA_MAX}>50} {#var bot[damage][single] frostbite} {#var bot[damage][single] zap} };
        #default {#nop};
    }
}

#alias updategroupname {
    #var groupsize &MSDP_GROUP[];
    #if {$oldgroupsize!=$groupsize} {
        #math groupsizefree {9-$groupsize};
        #if {$groupsizefree==1} 
        {#show Tellurian: $groupsizefree open spot} 
        {#show Tellurian: $groupsizefree open spots}
    };
    #var oldgroupsize $groupsize;
}

#ticker tellu_restart_ticker {#nop show <152>Time since last kill: @tellu_lastkilltime{}   GroupCanMove: @can_group_move{};
    #if { ($autowalk) && ($timesincelastkill>$tellu_allowed_downtime) && (@can_group_move{})} 
    {
        #show \n<131>Was stuck.. here we go;
        #var lastkilltime $MSDP_UPTIME;
        actionCleared
    }
} 
{10}

#alias tellu_kill {
    #var tellu_mob_in_room %1;
    #math tellu_mobs_in_room {$tellu_mobs_in_room + $tellu_mob_in_room};
    #regexp {$tell_mobs[$tellu_zone][$tellu_mode][$MSDP_ROOM_TERRAIN]} {$tellu_target} 
    {#show <172> [$tellu_mob_in_room] TRUE - $tellu_mode $cur_room_vnum;#var botPositive $tellu_mob_in_room}
    {#show <131> [$tellu_mob_in_room] FALSE - $tellu_mode $cur_room_vnum;#var botNegative $tellu_mob_in_room} 
}

#function tellu_lastkilltime {
    #math timesincelastkill { $MSDP_UPTIME - $lastkilltime };
    #return $timesincelastkill
}

#alias addAverageKillTime {
    #nop math total_kills { $tellu_stats[revive] + $tellu_stats[fury] + $tellu_stats[prudent] };
    #nop math tellu_stats[average_kill_time] { ((( $total_kills-1 ) * $tellu_stats[average_kill_time]) + %1 ) / $total_kills };
}

#alias tellu_stats {
    #show <134> Revive: $tellu_stats[revive]  Fury: $tellu_stats[fury]  Prudent: $tellu_stats[prudent];
    #show <134> Scarab-kin: $tellu_stats[scarab-kin]  Topiary/tree: $tellu_stats[topiary]  Tundra-snap/Wolf: $tellu_stats[tundra-snap];
    #show <134> Last kill: $tellu_kill_timer(s);
}



event_register {commsTell} {tellu_bot} {clan_command {%1} {%2} {%3} {%4}};

#action {^%1 tells you, 'sum me'} {
    #regexp {$need_summons} {%1} 
    {#show Already added} 
    {#show Add to summon;tell %1 Your summon request has been queued.. please wait;#format sumname %l %1;#list need_summons add $sumname};
} {2}


#alias clan_command {
    #nop CLAN COMMAND: <commsTell><Werlynn (testing something)><><Werlynn tells you, 'testing something'>;
    #REGEXP {%2} {%S (%S)} {
        #if {"&1" != "Someone"} {
            #nop test if clannie;
            #action {^Clan: %%1 (%%2)} {
                #show CLAN: %1;
                #if {"%1"=="FTB"} {
                    #var clannie 1;
                    tell &1 Command <&2> is being processed;
                };#else {
                    #var clannie 0;
                    tell &1 Command <&2> will be ignored;
                };
                #unaction {^Clan: %%1 (%%2)}
            };
            whois &1;
        }
    } 
}


#alias tellu_summon {
    #if {&need_summons[]>0} {
        #loop 1 &need_summons[] {id} {
            gt all sum $need_summons[$id];
            gt all portal $need_summons[$id];
            #if { ("$MSDP_CLASS"=="Prophet") || ("$MSDP_CLASS"=="Templar") || ("$MSDP_CLASS"=="Necromancer") } {sum 0.$need_summons[$id]};
            #if {"$MSDP_CLASS"=="Wizard"} {portal 0.$need_summons[$id]}
        };
        #var need_summons {};
    }
}

#ACTION {A Tellurian Outpost                                    %1 |    N    [U]} {
    #if { ("@group_leader{}"!="$MSDP_CHARACTER_NAME") && ($autowalk==0)} {
        #var tellu_zone {};
        #action {You follow $leader %%2.} {
            #var tellu_zone %%2;
            show_debug {<131>Zone being reset, new zone: %%2};
            #unaction {You follow%%%2.}
        };
        #nop badweather
    }
}  

#alias badweather {#delay badweather {#if { ("$MSDP_CLASS"=="Druid") || ("$MSDP_CLASS"=="Prophet") } {nco controlweather worse}} {5}}

#action {A large, glowing scarab stands here in a defensive posture.%1} {#var tellu_target scarab;tellu_kill @mob_count{"%1"}}
#action {A large wolf, with icy-blue fur stands here observing.%1} {#var tellu_target wolf;tellu_kill @mob_count{"%1"}}
#action {An extremely stout tree stands here, wavering slowly.%1} {#var tellu_target topiary;tellu_kill @mob_count{"%1"}}
#action {A Tellurian scarab-kin is here looking alert.%1} {#var tellu_target scarab;tellu_kill @mob_count{"%1"}}
#action {A Tellurian tundra-snap is here looking alert.%1} {#var tellu_target wolf;tellu_kill @mob_count{"%1"}}
#action {A Tellurian topiary is here looking alert.%1} {#var tellu_target topiary;tellu_kill @mob_count{"%1"}}

#action {A Tellurian blood-mage is hovering here.} {#var tellu_target mage;: marks $tellu_target for death.}

#action {A terrifying scream pierces the ears as GRODAN emerges from his slumber!} {#show UPPER FLOOR OPEN}

#action {A Tellurian fury is hovering here.} {#var tellu_target fury;#if { ("$MSDP_CLASS"=="Wizard") || ("$MSDP_CLASS"=="Prophet")} {#var bot[damage][single]dmagic}}
#action {A Tellurian fury steps out of the shadows.} {#show <131>FURY JOINED THE FIGHT!!!}

#action {A Tellurian elder is hovering here.} {#var tellu_target elder;: marks $tellu_target for death.}

#action {Grodan is here looking alert.} {#var tellu_target grodan;#if { ("$MSDP_CLASS"=="Wizard") || ("$MSDP_CLASS"=="Prophet")} {#var bot[damage][single] dmagic}}

#action {Grodan gleams as the remaining elders infuse him with their life essence.} {#show <131>STILL ELDERS ALIVE, MIRACLE!!!}

#action {Grodan glimmers as the remaining visages infuse him with their life essence.} {#show <131>VISAGES SPAWNED, MIRACLE!!!}
#action {A visage of Grodan is hovering here.} {#var tellu_target grodan;: marks $tellu_target for death.}
#highlight {All of Telluria shakes and rumbles as the ground shifts.} {reverse yellow}

#action {A Tellurian %1 says, 'Ahh, yes.%2The %3 shall revive my body!'} {
    #delay $tellu_kill_delay {actionCleared};
    #var tellu_stats[%1] @increment{$tellu_stats[%1]};
    #var tellu_stats[revive] @increment{$tellu_stats[revive]};
    #var lastkilltime $MSDP_UPTIME;
    #math tellu_kill_timer { $MSDP_UPTIME - $tellu_kill_timer };
    #show \n<172>GOOD KILL on [%1] in [%3]!!    zone:[$tellu_zone]  KillTime: $tellu_kill_timer(s);
    #nop addAverageKillTime $tellu_kill_timer
};
#action {A Tellurian %1 says, 'Ahh, yes.%2The %3 shall revive my body, and fuel my FURY!'} {
    #delay $tellu_kill_delay {actionCleared};
    #var tellu_stats[%1] @increment{$tellu_stats[%1]};
    #var tellu_stats[fury] @increment{$tellu_stats[fury]};
    #var lastkilltime $MSDP_UPTIME;
    #math tellu_kill_timer { $MSDP_UPTIME - $tellu_kill_timer };
    #show \n<Bfca><F000>FURY KILL on [%1] in [%3]!!    zone:[$tellu_zone]  KillTime: $tellu_kill_timer(s);
    #nop addAverageKillTime $tellu_kill_timer
};
#action {A Tellurian %1 says, 'Ahh, yes.%2The %3 shall revive my body, and my FURY!'} {
    #delay $tellu_kill_delay {actionCleared};
    #var tellu_stats[%1] @increment{$tellu_stats[%1]};
    #var tellu_stats[fury] @increment{$tellu_stats[fury]};
    #var lastkilltime $MSDP_UPTIME;
    #math tellu_kill_timer { $MSDP_UPTIME - $tellu_kill_timer };
    #show \n<Bfca><F000>FURY KILL on [%1] in [%3]!!    zone:[$tellu_zone]  KillTime: $tellu_kill_timer(s);
    #nop addAverageKillTime $tellu_kill_timer
};
#action {A Tellurian %1 says, 'Ahh, yes.%2The %3, a prudent resting place.'} {
    #delay $tellu_kill_delay {actionCleared};
    #var tellu_stats[%1] @increment{$tellu_stats[%1]};
    #var tellu_stats[prudent] @increment{$tellu_stats[prudent]};
    #var lastkilltime $MSDP_UPTIME;
    #math tellu_kill_timer { $MSDP_UPTIME - $tellu_kill_timer };
    #show \n131>VERY BAD KILL on [%1] in [%3]!!    zone:[$tellu_zone]  KillTime: $tellu_kill_timer(s);
    gt BAD KILL;
    #nop addAverageKillTime $tellu_kill_timer
};

#action {A Tellurian %1 comes to a Tellurian %2's aid.} {safetokill {%1} {%2} {} {JOINED}}

#action {A Tellurian %1 arrives from the %2.} {safetokill {%1} {} {%2} {ARRIVES}}

#action {A Tellurian %1 utters the words 'unsohaiorz'} {#nop show <131>%1 ENDS COMBAT}
#action {A Tellurian %1 steps out of the shadows.} {#nop show <131>%1 JOINER!!!!}

#alias safetokill {
    #nop %1 joiner, %2 aided, %3 direction, %4 action ;
    #show \n<132>>%1< >%2< >%3< >%4<;
    #switch {"%1"} {
        #case {"tundra-snap"} {#var tellu_joiner wolf};
        #case {"topiary"} {#var tellu_joiner topiary};
        #case {"scarab-kin"} {#var tellu_joiner scarab};
    };
    #regexp {$tell_mobs[$tellu_zone][$tellu_mode][$MSDP_ROOM_TERRAIN]} {$tellu_joiner} 
    {
        #nop MOB in safe room;
        #if {"%4"=="JOINED"} {
            #if {"@group_leader{}"=="$MSDP_CHARACTER_NAME"} {gt $tellu_joiner JOINED %2, SAFE kill} {#show <132>$tellu_joiner JOINED %2, SAFE kill};
        };#else {
            #show <172>$tellu_joiner ARRIVED from %3, SAFE KILL - [$tellu_zone]  [$tellu_mode]  [$MSDP_ROOM_TERRAIN]
        }
    }
    {
        #nop MOB in BAD room;
        #if {"%4"=="JOINED"} {
            #if {"@group_leader{}"=="$MSDP_CHARACTER_NAME"} {gt $tellu_joiner JOINED %2, BAD kill} {#show <132>$tellu_joiner JOINED %2, BAD kill};
        };#else {
            #show <131>$tellu_joiner ARRIVED from %3, BAD KILL - [$tellu_zone]  [$tellu_mode]  [$MSDP_ROOM_TERRAIN]
        }
    };
    #var tellu_joiner {};
}



#function visualizeOdometer {
    #var odobar {};
    #local _temp_odo_bar $_meter[KILLS];
    #list _temp_odo_bar sort;
    #list _temp_odo_bar reverse;
    #local _temp_odo_bar_max $_temp_odo_bar[0];

    #loop 1 &_meter[KILLS][] id {
        #math _odo_bar_current { @pct{$_meter[KILLS][$id];$_temp_odo_bar_max} };
        #format _odo_bar_current {%d} {$_odo_bar_current};
        #if {$MSDP_WORLD_TIME != $id} {
            #cat odobar {@colorPctBlock{$_odo_bar_current}}
        };#else {
            #cat odobar {<bffffff><f000000>■}
        }
    };
    #cat odobar {<B538d87>};
    #return $odobar
}



#alias tellu_bot_info {
	#if $autowalk {
        #math timesincelastkill { $MSDP_UPTIME - $lastkilltime };
		#format tellu_bot_info[1] {<B538d87><Fffffff>Zone:<Fd5d8d6>%-5s <Fffffff>Autokill:<Fd5d8d6>%s (%ss) <Fffffff>Autowalk:<Fd5d8d6>%s} {$tellu_mode} {$tell_start_kill} {$tell_start_kill_delay} {$autowalk};
        #format tellu_bot_info[2] {<B538d87><Fffffff>Walk:<Fd5d8d6>%-3s <Fffffff>WayP:<Fd5d8d6>%s <Fffffff>Delays Kill:<Fd5d8d6>%s <Fffffff>Zone:<Fd5d8d6> %s } {$autowalkspeed} {$waypointdelay} {$tellu_kill_delay} {$zonedelay};
        #format tellu_bot_info[3] {<B538d87><Fffffff>LastKill:<Fd5d8d6>%+3s(s) <Fffffff>Allowed:<Fd5d8d6>%s(s)} {@tellu_lastkilltime{}} {$tellu_allowed_downtime};
        #format tellu_bot_info[4] {<B538d87><Fffffff>Prudent:<Fd5d8d6> %-1s <Fffffff>Revive:<Fd5d8d6>%s <Fffffff>Fury:<Fd5d8d6>%s} {$tellu_stats[prudent]} {$tellu_stats[revive]} {$tellu_stats[fury]};
        #format tellu_bot_info[5] {<B538d87><Fffffff>Odometer: %s} {@visualizeOdometer{}};
    };
	#else {
		#var tellu_bot_info {Tellu Bot: offline};
	};
    #if {@is_alias{display_right_tiles}} {display_right_tiles};
}
