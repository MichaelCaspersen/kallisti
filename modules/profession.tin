#nop --
#nop Class Definitions v0.01
#nop --

#var profession-description {Utilities for botting}
#var profession-help {
Commands:\n
\tprofon <profession> / profoff      profreset \n
\ttanon / tanoff  \n
\tAlias: skinlist  \n
\n
}

#nop --
#nop Modloader Stuff
#nop --

#alias profession-register {
	#if {@isloaded{modloader}} {

		register_module profession
	} {
		#class profession kill
	}
}


#NOP #######################################################
#NOP Profession unique variables
#NOP #######################################################

#nop Gathering an be: skinning, butcher, extract
#var profession[gather][type] skinning
#var profession[gather][auto] 1
#var profession[gather][success] 0
#var profession[gather][total] 0
#var profession[gather][receiver] {} ;#nop Empty will donate to own house, or else to <value> house

#nop Refining can be: tan, cook, carve
#var profession[refining][type] tanning
#var profession[refining][auto] 0
#var profession[refining][reset] 1
#var profession[refining][donationroom] {kruoill}
#var profession[refining][start] 0;
#var profession[refining][startgold] 0;
#var profession[refining][startexp] 0;

#var profession[refresher] Kaicha
#var hidespickedup 0;



#NOP #######################################################
#NOP Profession panel
#NOP #######################################################
event_register {variable profession[gather][total]} {right} {generate_profession_info};
#alias generate_profession_info {
	#if $profession[gather][auto] {
		#if {"$profession[gather][receiver]" != ""} {
			#var profession_gather_info {$profession[gather][type] ($profession[gather][success]/$profession[gather][total]) @pct{$profession[gather][success];$profession[gather][total]} %  DonateTo: $profession[gather][receiver]};
		};
		#else {
			#var profession_gather_info {$profession[gather][type] ($profession[gather][success]/$profession[gather][total]) @pct{$profession[gather][success];$profession[gather][total]} %  DonateTo: Self};
		}
	};
	#else {
		#var profession_gather_info {Gathering: Offline};	
	};
	#if $profession[refining][auto] {
		#var profession_gather_info {$profession_gather_info \n$profession[refining][type]:$profession[refining][auto], Get items from: $profession[refining][donationroom]}
	};#else  {
		#var profession_gather_info {$profession_gather_info \nRefining: Offline}
	};
    #if {@is_alias{display_right_tiles}} {display_right_tiles};
}

#if {&{right_tiles}} {
	set_right_tile 11 <B5f819d> profession_gather_info 2 tile;
	generate_profession_info;
}

#alias {do_gather} {
	#SWITCH {$profession[gather][type]} {
		#CASE {"skinning"} {do_skin %1};
		#CASE {"butcher"} {do_butcher %1};
		#CASE {"extract"} {do_extract %1};
		#DEFAULT {#nop}
	}; 
}


#NOP #######################################################
#NOP Professions - Skinning;
#NOP #######################################################
#alias profon 	{#var profession[gather][auto] 1;generate_profession_info;#show Will start gathering: $1}
#alias profoff 	{#var profession[gather][auto] 0;generate_profession_info;#show Will no longer gather anything}

#NOP Entered new zone, update corpses to be skinned
#var zone[skinlist] {"Sabrael";"Melkyal";"Barbelo of The Four";"Empyrean";"A cave monster";"A tunnel protector";"A tunnel hermit";"A dark halfling"};
#var zone[skinlist] {{"A kakapo"};{"A weka"};{"A takahe"};{"A pelegornis"};{"A royal albatross"};{"A spectacled cormorant"};{"A giant moa"}}

#alias {do_skin} {
	#if $profession[gather][auto] {
		#show <121><<< Skin? %0 >>>;
		#if { &zone[skinlist]["%0"]>0 } {
			queueAdd priority {skin corpse};
		} {
			#nop;
		}
	}
}


#ACTION {You skin some %1 hide from} {
	#show Skin type:[<131>%1];
	#math profession[gather][total] {$profession[gather][total]+1};
	#switch {"%1"} {
		#case {"junk"} {sac hide};
		#case {"rough"} {sac hide};
		#case {"average"} {donate hide home};
		#default {
			#if { "$profession[gather][receiver]"=="" } {
				donate hide home;
			};
			#else {
				give hide $profession[gather][receiver];
			};
			#math profession[gather][success] {$profession[gather][success]+1}
		}
	};
	generate_profession_info;
}


#alias {profreset} {
	#var profession[gather][success] 0;
	#var profession[gather][total] 0;
	generate_profession_info;
}

#NOP #######################################################
#NOP Auto tan 
#NOP #######################################################
#alias tanon {
	#var profession[refining][auto] 1;
	generate_profession_info;
	#show Will auto tan hides;
	#var profession[refining][start] $MSDP_UPTIME;
	#var profession[refining][startgold] $MSDP_GOLD;
	#var profession[refining][startexp] $MSDP_EXPERIENCE;
	get all.hide;
	tan hide
}



#alias tanoff {
	#math profession[refining][earnedgold] {$MSDP_GOLD-$profession[refining][startgold]};
	#math profession[refining][earnedexp] {$MSDP_EXPERIENCE-$profession[refining][startexp]};
	#math profession[refining][runtime] {$MSDP_UPTIME-$profession[refining][start]};
	#math profession[refining][runtime-sec] { $profession[refining][runtime] % 60 };
	#math profession[refining][runtime-min] { $profession[refining][runtime] / 60 };
	#var profession[refining][auto] 0;
	generate_profession_info;
	#show Will no longer auto tan hides;
	gt <<< Tanning session done: finished in $profession[refining][runtime-min]m $profession[refining][runtime-sec]s, we earned $profession[refining][earnedgold] gold and gained $profession[refining][earnedexp] exp >>>;
}




#action {You tan some %1 hide from %2 into some %3 leather from %4.} {
	#show Leather Quality:[<131>%3];
	#switch {"%3"} {
		#case {"flawless"} {#nop;tan hide};
		#case {"divine"} {#nop donate divine home;tan hide};
		#default {#show keep for selling;tan hide}
	}
}

#action {You fail to improve it.} {#if $profession[refining][auto] tan hide}
#action {Oops, you cracked it a little.} {#if $profession[refining][auto] tan hide}
#action {You are exhausted!} {#if $profession[refining][auto] {#delay waitforrefresh {tan hide} {3}}}
#action {The some %0 hide from %1 isn't high enough quality to tan.} {#if $profession[refining][auto] {sac hide;tan hide}}

#action {You must also specify what you want to tan.} {
	#if { $profession[refining][reset] && $profession[refining][auto] } {
		#var profession[refining][reset] 0;w;recall;2s3es;#$hidespickedup sell leather;visit houseofanasasi;dep all;
		#switch {"$profession[refining][donationroom]"} {
			#case {"kruoill"} {visit kruoil;e};
			#case {"houseofanasasi"} {e};
			#default {
				#show Can't find donation room for $profession[refining][donationroom];
			};
		};
		#delay {waitforcount} {get all.hide} {12};
		#delay {waitforcount2} {
			#if $profession[refining][reset] {
				#switch {"$MSDP_ACCOUNT_NAME"} {
					#case {"Kruoill"} {recall;3s2w;open gate s;s;open door s;2s2u4en;tan hide};
					#case {"HouseOfAnasasi"} {tan hide};
				}
			}
		} {14};
	}
}
#nop ac {There aren't any hides here you can take.} {#if $profession[refining][auto] {#var profession[refining][reset] 0;gt No more hides at $profession[refining][donationroom]}}
#nop ac {The tanner tells you, 'It appears that %0 was previously donated and I don't buy donated items!'} {sac leather;sell leather}
#nop ac {The tanner tells you, 'Please empty a leather backpack first.'} {}

#ac {The tanner tells you, 'I'll give you %1 coins for that.'} {sell hide}

#action {Welcome Home!  Type EGRESS to return to Midgaard.} {#var totalhides 0;#var profession[refining][reset] 1;counthides}
#action {You visit %0's home.  Type EGRESS to return to Midgaard.} {
	#var totalhides 0;
	#if $profession[refining][auto] {
		#if {"%0"=="Kruoill"} {
			#var profession[refining][donationroom] kruoill;generate_profession_info;counthides;
		};
		#var profession[refining][reset] 1;
	}
}
#action {The Forge} {
	#if $profession[refining][auto] {
		#var profession[refining][donationroom] houseofanasasi;generate_profession_info;counthides;
	}
}

#alias counthides {#delay removetotal {#show TOTAL HIDES: $totalhides} {1}}
#action {Some hide from %0 lies here. (%1)} {#math totalhides {$totalhides+%1}}
#action {You pick up %1 hides.} {#var hidespickedup %1;#math totalhidesremaining {$totalhides-%1};gt $totalhidesremaining remaining}
