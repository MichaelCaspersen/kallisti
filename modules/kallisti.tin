#nop --
#nop Class Definitions
#nop --

#var kallisti-description {Login and session management for Legends of Kallisti}
#var kallisti-help {Use connect to connect to Legends of Kallisti on the main port.}

#nop --
#nop Modloader Stuff
#nop --

#alias kallisti-register {
	#if {@isloaded{events}} {
		register_module kallisti
	} {
		fail_module kallisti
	}
}

#tab connect
#alias connect {
	#showme attempt to create session for player %1.;
	#switch {"%2"} {
		#case {"tp"} {
			#session kallisti:%1 {kallistimud.com} {4069} {$players/%1_kallisti.player};
		};
		#case {"builder"} {
			#session kallisti:%1 {kallistimud.com} {4005} {$players/%1_kallisti.player};
		};
		#default {
			#session kallisti-%1 {75.50.248.16} {4000} {$players/%1_kallisti.player};
		};
	};
	#if {@is_session{kallisti:%1}} {
		#if {"%1" != "${char_name}"} {
		    warn CONFIG '%1' does not match '${char_name}' in $players/%1_kallisti.player;
    	    #format {_ts} {%t} {%D %H:%m:%S};
		    #line log $log/tth.error ${_ts} warn CONFIG '%1' does not match char_name field '${char_name}' in $players/%1_kallisti.player;

    	};
	} {
		err connect Connection failed.
	}
}

#alias post_connect_load {
	#config {LOG MODE} PLAIN;
    #showme %0;
	info Loading post-connect modules;
	load_module prefs;
	load_module layout;
	load_module kal_comms;
	load_module map;
	load_module queues;
	#foreach {$modules_on_connect[%*]} {module} {
			load_module $module
	};

	info kallisti Loading kallisti modules;
	#foreach {autobuf;levels;meta;odometer;playermap;followers} tmp {
		load_module kallisti/$tmp
	};
	#switch {"$MSDP_CLASS"} {
		#case {"Necromancer"} {
		};
		#case {"Demoniac"} {
		};
		#case {"Prophet"} {
		};
		#case {"Samurai"} {
		};
		#case {"Druid"} {
		};
		#default {
			#nop #if {"$remort[TRUE]" == "1"} {};
		}
	};
	#line oneshot #tick {clear} {#buffer end} {0.5};
	#if {@is_alias{player_setup}} {player_setup %1};
}

#act {^Enter your account name.} {
	#send ${account_name};
	#class account read {$players/${account_name}_kallisti.account}
}

#act {^Please enter your account password (or just press <ENTER> to abort login):} {
	#send ${account_password};
	#if {"${account_dont_forget_password}" != "true"} {
		#showme <fcc>Forgetting password.;
		#unvar account_password;
	};
}

#act {^                             *** PRESS ENTER ***} {#send motd;#send 3 $char_name;#send 1}

#act {^Welcome to the legendary lands of Kallisti.} {post_connect_load login}
#act {^Reconnecting.} {post_connect_load reconnect}


#nop -- Let's populate two tiles as samples as they're commonly asked for;
event_register {variable MSDP_ROOM_VNUM} {right} {generate_area_info {%0} {%1} {%2}};
event_register {variable MSDP_ROOM_WEATHER} {right} {generate_area_info {%0} {%1} {%2}};
event_register {variable MSDP_GROUP} {right} {generate_group_info {%0} {%1} {%2}};

#alias generate_group_info {
    syslog right debug generate new group info - %2;
    #if {(!&{MSDP_GROUP}) || (&MSDP_GROUP[] == 0)} {
		#list group_info create {<Ffff>Not Grouped};
    } {
    	#list group_info create {<Ffff>Group (level ${MSDP_GROUPLEVEL})};
	};
    #foreach *MSDP_GROUP[%*] {_idx} {
		#var _flags $MSDP_GROUP[$_idx][flags];
		#replace {_flags} {[ranged]} {>};
		#local _lev $MSDP_GROUP[$_idx][level];
		#if {$_lev > 99} {
			#math {_lev} {$_lev - 100};
			#var _lev *${_lev};
		};

        #format _line {<ffff>%-5s%+2s] %-10.9s %-3s %-3s %-3s <ffff>%-4s}
            {@withMe{$_idx}[$MSDP_GROUP[$_idx][class]}
			{$_lev}
            {$MSDP_GROUP[$_idx][name]}
            {@colorPct{$MSDP_GROUP[$_idx][health]}}
            {@colorPct{$MSDP_GROUP[$_idx][mana]}}
            {@colorPct{$MSDP_GROUP[$_idx][stamina]}}
            {$_flags};
             #list group_info add {{$_line}};
    };
    #if {@is_alias{display_right_tiles}} {display_right_tiles};
    #if {@is_alias{display_map_tiles}} {display_map_tiles};
}

#alias generate_area_info {
    syslog right debug generate new area info - %1|%2|%3;
	#if {@is_alias{room_event}} {room_event}; #nop in bot;
	#if {"$MSDP_AREA_NAME"=="The Wilderness"} {
    	#var area_info {@weatherIcon{} <Ffff>${MSDP_AREA_NAME} ($wilder[x],$wilder[y]) $MSDP_ROOM_VNUM \nLevel: $MSDP_AREA_MINLEVEL - $MSDP_AREA_MAXLEVEL, In zone/room: $MSDP_PC_IN_ZONE / $MSDP_PC_IN_ROOM};
	};#else {
	    #var area_info {${MSDP_AREA_NAME} - $MSDP_ROOM_VNUM - $MSDP_ROOM_WEATHER\nLevel: $MSDP_AREA_MINLEVEL - $MSDP_AREA_MAXLEVEL, In zone/room: $MSDP_PC_IN_ZONE / $MSDP_PC_IN_ROOM};
	};
    #if {@is_alias{display_right_tiles}} {display_right_tiles};
    #if {@is_alias{display_map_tiles}} {display_map_tiles};
}

#function weatherIcon {
	#SWITCH { "$MSDP_ROOM_WEATHER" } {
		#CASE { "clear" } {#var result <Fff0>üîÜ};
		#CASE { "cloudy" } {#var result <Fffa>‚õÖ};
		#CASE { "raining" } {#var result <Ffff>üåßÔ∏è};
		#CASE { "snowing" } {#var result <Ffff>‚òÉÔ∏è};
		#CASE { "storming" } {#var result <F1af>üå©Ô∏è};
		#CASE { "maelstrom" } {#var result <F16f>‚õàÔ∏è};
		#DEFAULT {#nop}
	};
}


event_register {variable MSDP_CHARACTER_NAME} {left} {update_player_info %1};
event_register {variable MSDP_LEVEL}  {left} {update_player_info %1};
event_register {variable MSDP_CLASS} {left} {update_player_info %1};
event_register {variable MSDP_RACE} {left} {update_player_info %1};
event_register {variable MSDP_STR} {left} {update_player_info %1};
event_register {variable MSDP_DEX} {left} {update_player_info %1};
event_register {variable MSDP_INT} {left} {update_player_info %1};
event_register {variable MSDP_WIS} {left} {update_player_info %1};
event_register {variable MSDP_CON} {left} {update_player_info %1};
event_register {variable MSDP_LUK} {left} {update_player_info %1};
event_register {variable MSDP_MOUNT_NAME} {left} {update_player_info %1};
event_register {variable MSDP_MOUNT_HEALTH} {left} {update_player_info %1};
event_register {variable MSDP_MOUNT_HEALTH_MAX} {left} {update_player_info %1};
event_register {variable MSDP_MOUNT_STAMINA} {left} {update_player_info %1};
event_register {variable MSDP_MOUNT_STAMINA_MAX} {left} {update_player_info %1};
event_register {variable MSDP_AFFECTS} {left} {update_player_info %1};
event_register {variable MSDP_EXPERIENCE} {left} {update_player_info %1};
event_register {variable MSDP_EXPERIENCE_TNL} {left} {update_player_info %1};
event_register {variable MSDP_BANK_GOLD} {left} {update_player_info %1};
event_register {variable MSDP_GOLD} {left} {update_player_info %1};
event_register {variable MSDP_REMORTS_LAPS_IN_CLASS} {left} {update_player_info %1};
event_register {variable MSDP_REMORTS_LAPS_TOTAL} {left} {update_player_info %1};


#nop event_register {variable MSDP_OPPONENT_NAME} {left} {update_combat_info %1};
#nop event_register {variable MSDP_OPPONENT_LEVEL} {left} {update_combat_info %1};
#nop event_register {variable MSDP_OPPONENT_HEALTH} {left} {update_combat_info %1};
#nop event_register {variable MSDP_OPPONENT_HEALTH_MAX} {left} {update_combat_info %1};
#nop event_register {variable MSDP_OPPONENT_NUMBER} {left} {update_combat_info %1};
#nop event_register {variable MSDP_OPPONENT_STAMINA} {left} {update_combat_info %1};
#nop event_register {variable MSDP_OPPONENT_STAMINA_MAX} {left} {update_combat_info %1};

#alias {update_player_info} {
	#nop %0 %1;
	
	#format player_info[1] {<B538d87><388><188>%s} {Character};
	
	#format player_info[2] {<088>%-13s %-10s[%-3d]} {$MSDP_CHARACTER_NAME}
			{$MSDP_CLASS} 			{$MSDP_LEVEL};
	
	#format player_info[3] {%-15s %+5s [%+5d]} 
			{$MSDP_RACE} { } {$MSDP_ALIGNMENT};

	#format player_info[4] { };
	#format player_info[5] {<Fde935f>S:<Fd5d8d6>%-2s <Fde935f>I:<Fd5d8d6>%-2s <Fde935f>W:<Fd5d8d6>%-2s <Fde935f>D:<Fd5d8d6>%-2d <Fde935f>C:<Fd5d8d6>%-2d <Fde935f>L:<Fd5d8d6>%-2d}
		{$MSDP_STR} {$MSDP_INT} {$MSDP_WIS} {$MSDP_DEX}
		{$MSDP_CON} {$MSDP_LUK};

	#format player_info[6] { };
	#format player_info[7] {<Fde935f>Hero:<Fd5d8d6> %-5s   <Fde935f>TNL:<Fd5d8d6> %-6d} {$MSDP_HERO_POINTS} {$MSDP_HERO_POINTS_TNL};
	#format player_info[8] {<Fde935f> Exp:<Fd5d8d6> %-6s  <Fde935f>TNL:<Fd5d8d6> %-6s} {@hNum{$MSDP_EXPERIENCE}} {@hNum{$MSDP_EXPERIENCE_TNL}};
	#format player_info[9] {<Fde935f>Gold:<Fd5d8d6> %-6s <Fed935f>Bank:<Fd5d8d6> %-6s} {@hNum{$MSDP_GOLD}} {@hNum{$MSDP_BANK_GOLD}};

	#format player_info[10] {<Fde935f>Est. Meta Sessions:<Fd5d8d6> %d} {@estimated_metas{}};
	#format player_info[11] {};
	#format player_info[12] {<B538d87><388><188>%s} {Affects};
	#format player_info[13] {@get_affects_block{}};
	#format player_info[14] {<B538d87><388><188>%s} {Mount};
	#if {"$MSDP_MOUNT_NAME" != ""} {
			#format player_info[15] {<088><Fde935f>Name: <Fd5d8d6>%s} {$MSDP_MOUNT_NAME};
			#format player_info[16] {<088><Fde935f> HP: <Fd5d8d6>%-4d/%-4d <Fde935f>SP: <Fd5d8d6>%-4d/%-4d} {$MSDP_MOUNT_HEALTH} {$MSDP_MOUNT_HEALTH_MAX} {$MSDP_MOUNT_STAMINA} {$MSDP_MOUNT_STAMINA_MAX};
	} {
		#var player_info[17] {<088>};
		#var player_info[18] {<088>};
	};
	#format player_info[19] { };
	#format player_info[20] {<B538d87><388><188>%s} {Remort Info};
	#format player_info[21] {<088><Fde935f>Total:<Fd5d8d6> %-d      <Fde935f>In Class:<Fd5d8d6> %-d} {$MSDP_REMORT_LAPS_TOTAL} {$MSDP_REMORTS_LAPS_IN_CLASS};

	#format player_info[22] @bankmeter{XPBank (@hNum{@xpbanksize{}});30};

    #if {@is_alias{display_right_tiles}} {display_right_tiles}
}

#function get_affects_block {
	#var counter 0;
	#var result {<088>};
	#foreach {*MSDP_AFFECTS[]} {tmp} {
		#math counter {$counter + 1};
		#if { ($counter % 2) == 1} {
			#format result {%s<Fde935f>%%11.11s <Fd5d8d6>%%2d } {$result} {$tmp} {$MSDP_AFFECTS[$tmp]}
		} {
			#format result {%s<Fde935f>%%11.11s <Fd5d8d6>%%2d\n} {$result} {$tmp} {$MSDP_AFFECTS[$tmp]}
		}
	};
	#replace {result} {\\n$} {};
}


#nop -- generate_area_info;
#nop -- generate_group_info;
#nop -- update_player_info;

#tick {idle} {#cr} {30}

#action {^You have no knowledge of the spell, '%1'.} {event_raise {unlearned spell} {%1}}
#act {^You receive your reward for the kill, %1 experience points.} {
	#math zone[kills] {$zone[kills]+1};
    #buffer get _ripline -1;
    #var _xp %1;
    #regex {$_ripline} {{.*} is dead!} {
        event_raise {mob kill} {&1} $_xp
    } {
        event_raise {mob kill} {unknown} $_xp
    }
}

#nop -- only one of the following is required, figure out which
#action {~^\e[0m\e[0;32m< {\w+} |} {
    event_raise {prompt} {%1}
}
#action {^< $MSDP_CHARACTER_NAME %1>$} {event_raise prompt}
#action {^{[a-zA-Z ]+} {rides|flies|sneaks} in} {event_raise {entity arrival} {%1}}

#action {^%w starts following you.$} {event_raise {new follower} {%1}}

#nop vim: syntax=tt